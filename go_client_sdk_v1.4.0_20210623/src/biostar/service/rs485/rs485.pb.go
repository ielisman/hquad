// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rs485.proto

package rs485

import (
	device "biostar/service/device"
	err "biostar/service/err"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Mode int32

const (
	Mode_NOT_USE    Mode = 0
	Mode_MASTER     Mode = 1
	Mode_SLAVE      Mode = 2
	Mode_STANDALONE Mode = 3
)

var Mode_name = map[int32]string{
	0: "NOT_USE",
	1: "MASTER",
	2: "SLAVE",
	3: "STANDALONE",
}

var Mode_value = map[string]int32{
	"NOT_USE":    0,
	"MASTER":     1,
	"SLAVE":      2,
	"STANDALONE": 3,
}

func (x Mode) String() string {
	return proto.EnumName(Mode_name, int32(x))
}

func (Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e8a32fec4d1a0f1b, []int{0}
}

type IPDOutputFormat int32

const (
	IPDOutputFormat_CARDID IPDOutputFormat = 0
	IPDOutputFormat_USERID IPDOutputFormat = 1
)

var IPDOutputFormat_name = map[int32]string{
	0: "CARDID",
	1: "USERID",
}

var IPDOutputFormat_value = map[string]int32{
	"CARDID": 0,
	"USERID": 1,
}

func (x IPDOutputFormat) String() string {
	return proto.EnumName(IPDOutputFormat_name, int32(x))
}

func (IPDOutputFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e8a32fec4d1a0f1b, []int{1}
}

type SlaveDeviceInfo struct {
	DeviceID             uint32      `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	Type                 device.Type `protobuf:"varint,2,opt,name=type,proto3,enum=device.Type" json:"type,omitempty"`
	Enabled              bool        `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Connected            bool        `protobuf:"varint,4,opt,name=connected,proto3" json:"connected,omitempty"`
	ChannelID            uint32      `protobuf:"varint,5,opt,name=channelID,proto3" json:"channelID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SlaveDeviceInfo) Reset()         { *m = SlaveDeviceInfo{} }
func (m *SlaveDeviceInfo) String() string { return proto.CompactTextString(m) }
func (*SlaveDeviceInfo) ProtoMessage()    {}
func (*SlaveDeviceInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32fec4d1a0f1b, []int{0}
}

func (m *SlaveDeviceInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlaveDeviceInfo.Unmarshal(m, b)
}
func (m *SlaveDeviceInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlaveDeviceInfo.Marshal(b, m, deterministic)
}
func (m *SlaveDeviceInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlaveDeviceInfo.Merge(m, src)
}
func (m *SlaveDeviceInfo) XXX_Size() int {
	return xxx_messageInfo_SlaveDeviceInfo.Size(m)
}
func (m *SlaveDeviceInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_SlaveDeviceInfo.DiscardUnknown(m)
}

var xxx_messageInfo_SlaveDeviceInfo proto.InternalMessageInfo

func (m *SlaveDeviceInfo) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *SlaveDeviceInfo) GetType() device.Type {
	if m != nil {
		return m.Type
	}
	return device.Type_UNDEFINED
}

func (m *SlaveDeviceInfo) GetEnabled() bool {
	if m != nil {
		return m.Enabled
	}
	return false
}

func (m *SlaveDeviceInfo) GetConnected() bool {
	if m != nil {
		return m.Connected
	}
	return false
}

func (m *SlaveDeviceInfo) GetChannelID() uint32 {
	if m != nil {
		return m.ChannelID
	}
	return 0
}

type SearchDeviceRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchDeviceRequest) Reset()         { *m = SearchDeviceRequest{} }
func (m *SearchDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*SearchDeviceRequest) ProtoMessage()    {}
func (*SearchDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32fec4d1a0f1b, []int{1}
}

func (m *SearchDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchDeviceRequest.Unmarshal(m, b)
}
func (m *SearchDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchDeviceRequest.Marshal(b, m, deterministic)
}
func (m *SearchDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchDeviceRequest.Merge(m, src)
}
func (m *SearchDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_SearchDeviceRequest.Size(m)
}
func (m *SearchDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchDeviceRequest proto.InternalMessageInfo

func (m *SearchDeviceRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type SearchDeviceResponse struct {
	SlaveInfos           []*SlaveDeviceInfo `protobuf:"bytes,1,rep,name=slaveInfos,proto3" json:"slaveInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SearchDeviceResponse) Reset()         { *m = SearchDeviceResponse{} }
func (m *SearchDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*SearchDeviceResponse) ProtoMessage()    {}
func (*SearchDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32fec4d1a0f1b, []int{2}
}

func (m *SearchDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchDeviceResponse.Unmarshal(m, b)
}
func (m *SearchDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchDeviceResponse.Marshal(b, m, deterministic)
}
func (m *SearchDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchDeviceResponse.Merge(m, src)
}
func (m *SearchDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_SearchDeviceResponse.Size(m)
}
func (m *SearchDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SearchDeviceResponse proto.InternalMessageInfo

func (m *SearchDeviceResponse) GetSlaveInfos() []*SlaveDeviceInfo {
	if m != nil {
		return m.SlaveInfos
	}
	return nil
}

type SetDeviceRequest struct {
	DeviceID             uint32             `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	SlaveInfos           []*SlaveDeviceInfo `protobuf:"bytes,2,rep,name=slaveInfos,proto3" json:"slaveInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SetDeviceRequest) Reset()         { *m = SetDeviceRequest{} }
func (m *SetDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*SetDeviceRequest) ProtoMessage()    {}
func (*SetDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32fec4d1a0f1b, []int{3}
}

func (m *SetDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetDeviceRequest.Unmarshal(m, b)
}
func (m *SetDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetDeviceRequest.Marshal(b, m, deterministic)
}
func (m *SetDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetDeviceRequest.Merge(m, src)
}
func (m *SetDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_SetDeviceRequest.Size(m)
}
func (m *SetDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetDeviceRequest proto.InternalMessageInfo

func (m *SetDeviceRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *SetDeviceRequest) GetSlaveInfos() []*SlaveDeviceInfo {
	if m != nil {
		return m.SlaveInfos
	}
	return nil
}

type SetDeviceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetDeviceResponse) Reset()         { *m = SetDeviceResponse{} }
func (m *SetDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*SetDeviceResponse) ProtoMessage()    {}
func (*SetDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32fec4d1a0f1b, []int{4}
}

func (m *SetDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetDeviceResponse.Unmarshal(m, b)
}
func (m *SetDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetDeviceResponse.Marshal(b, m, deterministic)
}
func (m *SetDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetDeviceResponse.Merge(m, src)
}
func (m *SetDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_SetDeviceResponse.Size(m)
}
func (m *SetDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetDeviceResponse proto.InternalMessageInfo

type GetDeviceRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetDeviceRequest) Reset()         { *m = GetDeviceRequest{} }
func (m *GetDeviceRequest) String() string { return proto.CompactTextString(m) }
func (*GetDeviceRequest) ProtoMessage()    {}
func (*GetDeviceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32fec4d1a0f1b, []int{5}
}

func (m *GetDeviceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceRequest.Unmarshal(m, b)
}
func (m *GetDeviceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceRequest.Marshal(b, m, deterministic)
}
func (m *GetDeviceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceRequest.Merge(m, src)
}
func (m *GetDeviceRequest) XXX_Size() int {
	return xxx_messageInfo_GetDeviceRequest.Size(m)
}
func (m *GetDeviceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceRequest proto.InternalMessageInfo

func (m *GetDeviceRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type GetDeviceResponse struct {
	SlaveInfos           []*SlaveDeviceInfo `protobuf:"bytes,2,rep,name=slaveInfos,proto3" json:"slaveInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetDeviceResponse) Reset()         { *m = GetDeviceResponse{} }
func (m *GetDeviceResponse) String() string { return proto.CompactTextString(m) }
func (*GetDeviceResponse) ProtoMessage()    {}
func (*GetDeviceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32fec4d1a0f1b, []int{6}
}

func (m *GetDeviceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDeviceResponse.Unmarshal(m, b)
}
func (m *GetDeviceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDeviceResponse.Marshal(b, m, deterministic)
}
func (m *GetDeviceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDeviceResponse.Merge(m, src)
}
func (m *GetDeviceResponse) XXX_Size() int {
	return xxx_messageInfo_GetDeviceResponse.Size(m)
}
func (m *GetDeviceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDeviceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetDeviceResponse proto.InternalMessageInfo

func (m *GetDeviceResponse) GetSlaveInfos() []*SlaveDeviceInfo {
	if m != nil {
		return m.SlaveInfos
	}
	return nil
}

type IntelligentPDInfo struct {
	UseExceptionCode     bool            `protobuf:"varint,1,opt,name=useExceptionCode,proto3" json:"useExceptionCode,omitempty"`
	ExceptionCode        []byte          `protobuf:"bytes,2,opt,name=exceptionCode,proto3" json:"exceptionCode,omitempty"`
	OutputFormat         IPDOutputFormat `protobuf:"varint,3,opt,name=outputFormat,proto3,enum=rs485.IPDOutputFormat" json:"outputFormat,omitempty"`
	OSDPID               uint32          `protobuf:"varint,4,opt,name=OSDPID,proto3" json:"OSDPID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *IntelligentPDInfo) Reset()         { *m = IntelligentPDInfo{} }
func (m *IntelligentPDInfo) String() string { return proto.CompactTextString(m) }
func (*IntelligentPDInfo) ProtoMessage()    {}
func (*IntelligentPDInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32fec4d1a0f1b, []int{7}
}

func (m *IntelligentPDInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IntelligentPDInfo.Unmarshal(m, b)
}
func (m *IntelligentPDInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IntelligentPDInfo.Marshal(b, m, deterministic)
}
func (m *IntelligentPDInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IntelligentPDInfo.Merge(m, src)
}
func (m *IntelligentPDInfo) XXX_Size() int {
	return xxx_messageInfo_IntelligentPDInfo.Size(m)
}
func (m *IntelligentPDInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_IntelligentPDInfo.DiscardUnknown(m)
}

var xxx_messageInfo_IntelligentPDInfo proto.InternalMessageInfo

func (m *IntelligentPDInfo) GetUseExceptionCode() bool {
	if m != nil {
		return m.UseExceptionCode
	}
	return false
}

func (m *IntelligentPDInfo) GetExceptionCode() []byte {
	if m != nil {
		return m.ExceptionCode
	}
	return nil
}

func (m *IntelligentPDInfo) GetOutputFormat() IPDOutputFormat {
	if m != nil {
		return m.OutputFormat
	}
	return IPDOutputFormat_CARDID
}

func (m *IntelligentPDInfo) GetOSDPID() uint32 {
	if m != nil {
		return m.OSDPID
	}
	return 0
}

type RS485Channel struct {
	ChannelID            uint32   `protobuf:"varint,1,opt,name=channelID,proto3" json:"channelID,omitempty"`
	Mode                 Mode     `protobuf:"varint,2,opt,name=mode,proto3,enum=rs485.Mode" json:"mode,omitempty"`
	BaudRate             uint32   `protobuf:"varint,3,opt,name=baudRate,proto3" json:"baudRate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RS485Channel) Reset()         { *m = RS485Channel{} }
func (m *RS485Channel) String() string { return proto.CompactTextString(m) }
func (*RS485Channel) ProtoMessage()    {}
func (*RS485Channel) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32fec4d1a0f1b, []int{8}
}

func (m *RS485Channel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RS485Channel.Unmarshal(m, b)
}
func (m *RS485Channel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RS485Channel.Marshal(b, m, deterministic)
}
func (m *RS485Channel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RS485Channel.Merge(m, src)
}
func (m *RS485Channel) XXX_Size() int {
	return xxx_messageInfo_RS485Channel.Size(m)
}
func (m *RS485Channel) XXX_DiscardUnknown() {
	xxx_messageInfo_RS485Channel.DiscardUnknown(m)
}

var xxx_messageInfo_RS485Channel proto.InternalMessageInfo

func (m *RS485Channel) GetChannelID() uint32 {
	if m != nil {
		return m.ChannelID
	}
	return 0
}

func (m *RS485Channel) GetMode() Mode {
	if m != nil {
		return m.Mode
	}
	return Mode_NOT_USE
}

func (m *RS485Channel) GetBaudRate() uint32 {
	if m != nil {
		return m.BaudRate
	}
	return 0
}

type RS485Config struct {
	Channels             []*RS485Channel    `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	IntelligentInfo      *IntelligentPDInfo `protobuf:"bytes,2,opt,name=intelligentInfo,proto3" json:"intelligentInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *RS485Config) Reset()         { *m = RS485Config{} }
func (m *RS485Config) String() string { return proto.CompactTextString(m) }
func (*RS485Config) ProtoMessage()    {}
func (*RS485Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32fec4d1a0f1b, []int{9}
}

func (m *RS485Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RS485Config.Unmarshal(m, b)
}
func (m *RS485Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RS485Config.Marshal(b, m, deterministic)
}
func (m *RS485Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RS485Config.Merge(m, src)
}
func (m *RS485Config) XXX_Size() int {
	return xxx_messageInfo_RS485Config.Size(m)
}
func (m *RS485Config) XXX_DiscardUnknown() {
	xxx_messageInfo_RS485Config.DiscardUnknown(m)
}

var xxx_messageInfo_RS485Config proto.InternalMessageInfo

func (m *RS485Config) GetChannels() []*RS485Channel {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *RS485Config) GetIntelligentInfo() *IntelligentPDInfo {
	if m != nil {
		return m.IntelligentInfo
	}
	return nil
}

type GetConfigRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetConfigRequest) Reset()         { *m = GetConfigRequest{} }
func (m *GetConfigRequest) String() string { return proto.CompactTextString(m) }
func (*GetConfigRequest) ProtoMessage()    {}
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32fec4d1a0f1b, []int{10}
}

func (m *GetConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigRequest.Unmarshal(m, b)
}
func (m *GetConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigRequest.Marshal(b, m, deterministic)
}
func (m *GetConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigRequest.Merge(m, src)
}
func (m *GetConfigRequest) XXX_Size() int {
	return xxx_messageInfo_GetConfigRequest.Size(m)
}
func (m *GetConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigRequest proto.InternalMessageInfo

func (m *GetConfigRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type GetConfigResponse struct {
	Config               *RS485Config `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetConfigResponse) Reset()         { *m = GetConfigResponse{} }
func (m *GetConfigResponse) String() string { return proto.CompactTextString(m) }
func (*GetConfigResponse) ProtoMessage()    {}
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32fec4d1a0f1b, []int{11}
}

func (m *GetConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetConfigResponse.Unmarshal(m, b)
}
func (m *GetConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetConfigResponse.Marshal(b, m, deterministic)
}
func (m *GetConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetConfigResponse.Merge(m, src)
}
func (m *GetConfigResponse) XXX_Size() int {
	return xxx_messageInfo_GetConfigResponse.Size(m)
}
func (m *GetConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetConfigResponse proto.InternalMessageInfo

func (m *GetConfigResponse) GetConfig() *RS485Config {
	if m != nil {
		return m.Config
	}
	return nil
}

type SetConfigRequest struct {
	DeviceID             uint32       `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	Config               *RS485Config `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SetConfigRequest) Reset()         { *m = SetConfigRequest{} }
func (m *SetConfigRequest) String() string { return proto.CompactTextString(m) }
func (*SetConfigRequest) ProtoMessage()    {}
func (*SetConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32fec4d1a0f1b, []int{12}
}

func (m *SetConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigRequest.Unmarshal(m, b)
}
func (m *SetConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigRequest.Marshal(b, m, deterministic)
}
func (m *SetConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigRequest.Merge(m, src)
}
func (m *SetConfigRequest) XXX_Size() int {
	return xxx_messageInfo_SetConfigRequest.Size(m)
}
func (m *SetConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigRequest proto.InternalMessageInfo

func (m *SetConfigRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *SetConfigRequest) GetConfig() *RS485Config {
	if m != nil {
		return m.Config
	}
	return nil
}

type SetConfigResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetConfigResponse) Reset()         { *m = SetConfigResponse{} }
func (m *SetConfigResponse) String() string { return proto.CompactTextString(m) }
func (*SetConfigResponse) ProtoMessage()    {}
func (*SetConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32fec4d1a0f1b, []int{13}
}

func (m *SetConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigResponse.Unmarshal(m, b)
}
func (m *SetConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigResponse.Marshal(b, m, deterministic)
}
func (m *SetConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigResponse.Merge(m, src)
}
func (m *SetConfigResponse) XXX_Size() int {
	return xxx_messageInfo_SetConfigResponse.Size(m)
}
func (m *SetConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigResponse proto.InternalMessageInfo

type SetConfigMultiRequest struct {
	DeviceIDs            []uint32     `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	Config               *RS485Config `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SetConfigMultiRequest) Reset()         { *m = SetConfigMultiRequest{} }
func (m *SetConfigMultiRequest) String() string { return proto.CompactTextString(m) }
func (*SetConfigMultiRequest) ProtoMessage()    {}
func (*SetConfigMultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32fec4d1a0f1b, []int{14}
}

func (m *SetConfigMultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigMultiRequest.Unmarshal(m, b)
}
func (m *SetConfigMultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigMultiRequest.Marshal(b, m, deterministic)
}
func (m *SetConfigMultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigMultiRequest.Merge(m, src)
}
func (m *SetConfigMultiRequest) XXX_Size() int {
	return xxx_messageInfo_SetConfigMultiRequest.Size(m)
}
func (m *SetConfigMultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigMultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigMultiRequest proto.InternalMessageInfo

func (m *SetConfigMultiRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

func (m *SetConfigMultiRequest) GetConfig() *RS485Config {
	if m != nil {
		return m.Config
	}
	return nil
}

type SetConfigMultiResponse struct {
	DeviceErrors         []*err.ErrorResponse `protobuf:"bytes,1,rep,name=deviceErrors,proto3" json:"deviceErrors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SetConfigMultiResponse) Reset()         { *m = SetConfigMultiResponse{} }
func (m *SetConfigMultiResponse) String() string { return proto.CompactTextString(m) }
func (*SetConfigMultiResponse) ProtoMessage()    {}
func (*SetConfigMultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8a32fec4d1a0f1b, []int{15}
}

func (m *SetConfigMultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetConfigMultiResponse.Unmarshal(m, b)
}
func (m *SetConfigMultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetConfigMultiResponse.Marshal(b, m, deterministic)
}
func (m *SetConfigMultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetConfigMultiResponse.Merge(m, src)
}
func (m *SetConfigMultiResponse) XXX_Size() int {
	return xxx_messageInfo_SetConfigMultiResponse.Size(m)
}
func (m *SetConfigMultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetConfigMultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetConfigMultiResponse proto.InternalMessageInfo

func (m *SetConfigMultiResponse) GetDeviceErrors() []*err.ErrorResponse {
	if m != nil {
		return m.DeviceErrors
	}
	return nil
}

func init() {
	proto.RegisterEnum("rs485.Mode", Mode_name, Mode_value)
	proto.RegisterEnum("rs485.IPDOutputFormat", IPDOutputFormat_name, IPDOutputFormat_value)
	proto.RegisterType((*SlaveDeviceInfo)(nil), "rs485.SlaveDeviceInfo")
	proto.RegisterType((*SearchDeviceRequest)(nil), "rs485.SearchDeviceRequest")
	proto.RegisterType((*SearchDeviceResponse)(nil), "rs485.SearchDeviceResponse")
	proto.RegisterType((*SetDeviceRequest)(nil), "rs485.SetDeviceRequest")
	proto.RegisterType((*SetDeviceResponse)(nil), "rs485.SetDeviceResponse")
	proto.RegisterType((*GetDeviceRequest)(nil), "rs485.GetDeviceRequest")
	proto.RegisterType((*GetDeviceResponse)(nil), "rs485.GetDeviceResponse")
	proto.RegisterType((*IntelligentPDInfo)(nil), "rs485.IntelligentPDInfo")
	proto.RegisterType((*RS485Channel)(nil), "rs485.RS485Channel")
	proto.RegisterType((*RS485Config)(nil), "rs485.RS485Config")
	proto.RegisterType((*GetConfigRequest)(nil), "rs485.GetConfigRequest")
	proto.RegisterType((*GetConfigResponse)(nil), "rs485.GetConfigResponse")
	proto.RegisterType((*SetConfigRequest)(nil), "rs485.SetConfigRequest")
	proto.RegisterType((*SetConfigResponse)(nil), "rs485.SetConfigResponse")
	proto.RegisterType((*SetConfigMultiRequest)(nil), "rs485.SetConfigMultiRequest")
	proto.RegisterType((*SetConfigMultiResponse)(nil), "rs485.SetConfigMultiResponse")
}

func init() { proto.RegisterFile("rs485.proto", fileDescriptor_e8a32fec4d1a0f1b) }

var fileDescriptor_e8a32fec4d1a0f1b = []byte{
	// 753 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x55, 0x4d, 0x4f, 0xdb, 0x4c,
	0x10, 0x7e, 0x9d, 0x2f, 0x92, 0xc9, 0x07, 0x66, 0x79, 0xa1, 0x56, 0x4a, 0xd5, 0xc8, 0xea, 0x21,
	0xcd, 0x21, 0xa8, 0x01, 0x2a, 0xc4, 0xa1, 0x55, 0xc0, 0x29, 0xb2, 0x4a, 0x3e, 0xb4, 0x0e, 0x3d,
	0x70, 0xa9, 0x1c, 0x67, 0x01, 0xab, 0x89, 0x9d, 0xda, 0x6b, 0x54, 0xae, 0xfd, 0x23, 0x3d, 0xf5,
	0x47, 0xf4, 0xdf, 0x55, 0xde, 0xb5, 0x1d, 0xdb, 0x81, 0x36, 0xf4, 0x96, 0x9d, 0x79, 0x66, 0x9e,
	0x67, 0xc7, 0xcf, 0x4e, 0xa0, 0xec, 0xb8, 0x87, 0xc7, 0x47, 0xed, 0x85, 0x63, 0x53, 0x1b, 0xe5,
	0xd9, 0xa1, 0x5e, 0x99, 0x92, 0x3b, 0xd3, 0x20, 0x3c, 0x58, 0x2f, 0x11, 0xc7, 0xe1, 0x3f, 0xe5,
	0x9f, 0x02, 0x6c, 0x6a, 0x33, 0xfd, 0x8e, 0x28, 0x0c, 0xa0, 0x5a, 0xd7, 0x36, 0xaa, 0x43, 0x91,
	0xc3, 0x55, 0x45, 0x12, 0x1a, 0x42, 0xb3, 0x8a, 0xa3, 0x33, 0x6a, 0x40, 0x8e, 0xde, 0x2f, 0x88,
	0x94, 0x69, 0x08, 0xcd, 0x5a, 0xa7, 0xd2, 0x0e, 0xfa, 0x8e, 0xef, 0x17, 0x04, 0xb3, 0x0c, 0x92,
	0x60, 0x83, 0x58, 0xfa, 0x64, 0x46, 0xa6, 0x52, 0xb6, 0x21, 0x34, 0x8b, 0x38, 0x3c, 0xa2, 0x3d,
	0x28, 0x19, 0xb6, 0x65, 0x11, 0x83, 0x92, 0xa9, 0x94, 0x63, 0xb9, 0x65, 0x80, 0x65, 0x6f, 0x75,
	0xcb, 0x22, 0x33, 0x55, 0x91, 0xf2, 0x8c, 0x76, 0x19, 0x90, 0xdf, 0xc0, 0xb6, 0x46, 0x74, 0xc7,
	0xb8, 0xe5, 0x3a, 0x31, 0xf9, 0xea, 0x11, 0x97, 0xfe, 0x49, 0xaa, 0x3c, 0x80, 0xff, 0x93, 0x25,
	0xee, 0xc2, 0xb6, 0x5c, 0x82, 0xde, 0x02, 0xb8, 0xfe, 0x8d, 0xfd, 0xbb, 0xba, 0x92, 0xd0, 0xc8,
	0x36, 0xcb, 0x9d, 0xdd, 0x36, 0x1f, 0x5a, 0x6a, 0x14, 0x38, 0x86, 0x94, 0xaf, 0x41, 0xd4, 0x08,
	0x5d, 0x9b, 0x3f, 0xc5, 0x93, 0x59, 0x9b, 0x67, 0x1b, 0xb6, 0x62, 0x3c, 0x5c, 0xb4, 0xdc, 0x06,
	0xf1, 0xfc, 0x09, 0xe4, 0xf2, 0x47, 0xd8, 0x3a, 0x4f, 0x37, 0xf9, 0x67, 0x45, 0xbf, 0x04, 0xd8,
	0x52, 0x2d, 0x4a, 0x66, 0x33, 0xf3, 0x86, 0x58, 0x74, 0xa4, 0x30, 0x9b, 0xb4, 0x40, 0xf4, 0x5c,
	0xd2, 0xfb, 0x66, 0x90, 0x05, 0x35, 0x6d, 0xeb, 0xcc, 0x9e, 0x12, 0x26, 0xa3, 0x88, 0x57, 0xe2,
	0xe8, 0x15, 0x54, 0x49, 0x02, 0xe8, 0xfb, 0xa7, 0x82, 0x93, 0x41, 0x74, 0x02, 0x15, 0xdb, 0xa3,
	0x0b, 0x8f, 0x7e, 0xb0, 0x9d, 0xb9, 0x4e, 0x99, 0x7f, 0x6a, 0x91, 0x42, 0x75, 0xa4, 0x0c, 0x63,
	0x59, 0x9c, 0xc0, 0xa2, 0x5d, 0x28, 0x0c, 0x35, 0x65, 0xa4, 0x2a, 0xcc, 0x59, 0x55, 0x1c, 0x9c,
	0x64, 0x13, 0x2a, 0x58, 0x3b, 0x3c, 0x3e, 0x3a, 0xe3, 0x56, 0x4a, 0xda, 0x4c, 0x48, 0xd9, 0x0c,
	0xbd, 0x84, 0xdc, 0x3c, 0x94, 0x57, 0xeb, 0x94, 0x03, 0xe6, 0xbe, 0x3d, 0x25, 0x98, 0x25, 0xfc,
	0x99, 0x4f, 0x74, 0x6f, 0x8a, 0x75, 0x4a, 0x98, 0xbc, 0x2a, 0x8e, 0xce, 0xf2, 0x77, 0x01, 0xca,
	0x9c, 0xcb, 0xb6, 0xae, 0xcd, 0x1b, 0xb4, 0x0f, 0xc5, 0xa0, 0x73, 0x68, 0xb3, 0xed, 0xa0, 0x61,
	0x5c, 0x11, 0x8e, 0x40, 0xe8, 0x14, 0x36, 0xcd, 0xe5, 0x98, 0xfd, 0x21, 0x33, 0x21, 0xe5, 0x8e,
	0x14, 0x8e, 0x20, 0xfd, 0x11, 0x70, 0xba, 0x20, 0x30, 0x0a, 0x57, 0xb0, 0x8e, 0x51, 0xde, 0x33,
	0xa3, 0x84, 0xf8, 0xc0, 0x28, 0x2d, 0x28, 0x18, 0x2c, 0xc2, 0xe0, 0xe5, 0x0e, 0x4a, 0xe8, 0xe6,
	0xd8, 0x00, 0x21, 0x5f, 0xb1, 0x67, 0xb1, 0x36, 0x61, 0xac, 0x77, 0xe6, 0xaf, 0xbd, 0xf9, 0x53,
	0x48, 0x8a, 0x93, 0x75, 0xd8, 0x89, 0x82, 0x7d, 0x6f, 0x46, 0xcd, 0x90, 0x75, 0x0f, 0x4a, 0x21,
	0x0b, 0x1f, 0x78, 0x15, 0x2f, 0x03, 0x4f, 0xe2, 0x1d, 0xc1, 0x6e, 0x9a, 0x22, 0x7a, 0x42, 0xc1,
	0x2a, 0xed, 0x39, 0x8e, 0xed, 0x84, 0xdf, 0x15, 0xb5, 0xfd, 0x8d, 0xca, 0x42, 0x21, 0x12, 0x27,
	0x70, 0xad, 0x13, 0xc8, 0xf9, 0x2e, 0x42, 0x65, 0xd8, 0x18, 0x0c, 0xc7, 0x9f, 0x2f, 0xb5, 0x9e,
	0xf8, 0x1f, 0x02, 0x28, 0xf4, 0xbb, 0xda, 0xb8, 0x87, 0x45, 0x01, 0x95, 0x20, 0xaf, 0x5d, 0x74,
	0x3f, 0xf5, 0xc4, 0x0c, 0xaa, 0x01, 0x68, 0xe3, 0xee, 0x40, 0xe9, 0x5e, 0x0c, 0x07, 0x3d, 0x31,
	0xdb, 0x7a, 0x0d, 0x9b, 0x29, 0xef, 0xfb, 0x95, 0x67, 0x5d, 0xac, 0xa8, 0x0a, 0xef, 0x72, 0xa9,
	0xf5, 0xb0, 0xaa, 0x88, 0x42, 0xe7, 0x47, 0x16, 0xf2, 0xec, 0x42, 0xe8, 0x1c, 0x2a, 0xf1, 0xed,
	0x87, 0xea, 0xe1, 0x3b, 0x5f, 0xdd, 0xa2, 0xf5, 0xe7, 0x0f, 0xe6, 0x82, 0x1b, 0xbf, 0x83, 0x52,
	0xb4, 0x49, 0xd0, 0xb3, 0x00, 0x99, 0xde, 0x45, 0x75, 0x69, 0x35, 0xb1, 0xac, 0xd7, 0x56, 0xea,
	0xb5, 0xc7, 0xea, 0xb5, 0x87, 0xea, 0x23, 0x83, 0xc6, 0xf9, 0x13, 0x8e, 0x8b, 0xf3, 0xa7, 0xbc,
	0xcc, 0xf9, 0x53, 0xf5, 0xda, 0x63, 0xf5, 0x2b, 0x76, 0x43, 0x7d, 0xa8, 0x25, 0xbd, 0x80, 0xf6,
	0xd2, 0xd8, 0xb8, 0x0b, 0xeb, 0x2f, 0x1e, 0xc9, 0xf2, 0x76, 0xa7, 0x07, 0x20, 0x19, 0xf6, 0xbc,
	0xed, 0x7a, 0x0b, 0x87, 0xcc, 0x75, 0xd3, 0x32, 0xda, 0xee, 0xf4, 0x0b, 0x2f, 0x19, 0x09, 0x57,
	0x3b, 0x13, 0xd3, 0x76, 0xa9, 0xee, 0xec, 0xbb, 0xc4, 0xf1, 0xa7, 0xb0, 0xcf, 0x12, 0x93, 0x02,
	0xfb, 0xb3, 0x3e, 0xf8, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x8d, 0xd4, 0x89, 0x0c, 0xdb, 0x07, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RS485Client is the client API for RS485 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RS485Client interface {
	SearchDevice(ctx context.Context, in *SearchDeviceRequest, opts ...grpc.CallOption) (*SearchDeviceResponse, error)
	GetDevice(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error)
	SetDevice(ctx context.Context, in *SetDeviceRequest, opts ...grpc.CallOption) (*SetDeviceResponse, error)
	GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*GetConfigResponse, error)
	SetConfig(ctx context.Context, in *SetConfigRequest, opts ...grpc.CallOption) (*SetConfigResponse, error)
	SetConfigMulti(ctx context.Context, in *SetConfigMultiRequest, opts ...grpc.CallOption) (*SetConfigMultiResponse, error)
}

type rS485Client struct {
	cc *grpc.ClientConn
}

func NewRS485Client(cc *grpc.ClientConn) RS485Client {
	return &rS485Client{cc}
}

func (c *rS485Client) SearchDevice(ctx context.Context, in *SearchDeviceRequest, opts ...grpc.CallOption) (*SearchDeviceResponse, error) {
	out := new(SearchDeviceResponse)
	err := c.cc.Invoke(ctx, "/rs485.RS485/SearchDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rS485Client) GetDevice(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error) {
	out := new(GetDeviceResponse)
	err := c.cc.Invoke(ctx, "/rs485.RS485/GetDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rS485Client) SetDevice(ctx context.Context, in *SetDeviceRequest, opts ...grpc.CallOption) (*SetDeviceResponse, error) {
	out := new(SetDeviceResponse)
	err := c.cc.Invoke(ctx, "/rs485.RS485/SetDevice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rS485Client) GetConfig(ctx context.Context, in *GetConfigRequest, opts ...grpc.CallOption) (*GetConfigResponse, error) {
	out := new(GetConfigResponse)
	err := c.cc.Invoke(ctx, "/rs485.RS485/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rS485Client) SetConfig(ctx context.Context, in *SetConfigRequest, opts ...grpc.CallOption) (*SetConfigResponse, error) {
	out := new(SetConfigResponse)
	err := c.cc.Invoke(ctx, "/rs485.RS485/SetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rS485Client) SetConfigMulti(ctx context.Context, in *SetConfigMultiRequest, opts ...grpc.CallOption) (*SetConfigMultiResponse, error) {
	out := new(SetConfigMultiResponse)
	err := c.cc.Invoke(ctx, "/rs485.RS485/SetConfigMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RS485Server is the server API for RS485 service.
type RS485Server interface {
	SearchDevice(context.Context, *SearchDeviceRequest) (*SearchDeviceResponse, error)
	GetDevice(context.Context, *GetDeviceRequest) (*GetDeviceResponse, error)
	SetDevice(context.Context, *SetDeviceRequest) (*SetDeviceResponse, error)
	GetConfig(context.Context, *GetConfigRequest) (*GetConfigResponse, error)
	SetConfig(context.Context, *SetConfigRequest) (*SetConfigResponse, error)
	SetConfigMulti(context.Context, *SetConfigMultiRequest) (*SetConfigMultiResponse, error)
}

func RegisterRS485Server(s *grpc.Server, srv RS485Server) {
	s.RegisterService(&_RS485_serviceDesc, srv)
}

func _RS485_SearchDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RS485Server).SearchDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rs485.RS485/SearchDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RS485Server).SearchDevice(ctx, req.(*SearchDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RS485_GetDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RS485Server).GetDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rs485.RS485/GetDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RS485Server).GetDevice(ctx, req.(*GetDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RS485_SetDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RS485Server).SetDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rs485.RS485/SetDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RS485Server).SetDevice(ctx, req.(*SetDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RS485_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RS485Server).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rs485.RS485/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RS485Server).GetConfig(ctx, req.(*GetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RS485_SetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RS485Server).SetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rs485.RS485/SetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RS485Server).SetConfig(ctx, req.(*SetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RS485_SetConfigMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetConfigMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RS485Server).SetConfigMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rs485.RS485/SetConfigMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RS485Server).SetConfigMulti(ctx, req.(*SetConfigMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RS485_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rs485.RS485",
	HandlerType: (*RS485Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchDevice",
			Handler:    _RS485_SearchDevice_Handler,
		},
		{
			MethodName: "GetDevice",
			Handler:    _RS485_GetDevice_Handler,
		},
		{
			MethodName: "SetDevice",
			Handler:    _RS485_SetDevice_Handler,
		},
		{
			MethodName: "GetConfig",
			Handler:    _RS485_GetConfig_Handler,
		},
		{
			MethodName: "SetConfig",
			Handler:    _RS485_SetConfig_Handler,
		},
		{
			MethodName: "SetConfigMulti",
			Handler:    _RS485_SetConfigMulti_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rs485.proto",
}
