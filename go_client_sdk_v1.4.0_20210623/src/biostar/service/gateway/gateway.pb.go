// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gateway.proto

package gateway

import (
	cert "biostar/service/cert"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Status int32

const (
	// Normal Status
	Status_DISCONNECTED Status = 0
	Status_CONNECTED    Status = 1
)

var Status_name = map[int32]string{
	0: "DISCONNECTED",
	1: "CONNECTED",
}

var Status_value = map[string]int32{
	"DISCONNECTED": 0,
	"CONNECTED":    1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{0}
}

type GatewayInfo struct {
	GatewayID            string   `protobuf:"bytes,1,opt,name=gatewayID,proto3" json:"gatewayID,omitempty"`
	DeviceIDs            []uint32 `protobuf:"varint,2,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	IsConnected          bool     `protobuf:"varint,3,opt,name=isConnected,proto3" json:"isConnected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GatewayInfo) Reset()         { *m = GatewayInfo{} }
func (m *GatewayInfo) String() string { return proto.CompactTextString(m) }
func (*GatewayInfo) ProtoMessage()    {}
func (*GatewayInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{0}
}

func (m *GatewayInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewayInfo.Unmarshal(m, b)
}
func (m *GatewayInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewayInfo.Marshal(b, m, deterministic)
}
func (m *GatewayInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewayInfo.Merge(m, src)
}
func (m *GatewayInfo) XXX_Size() int {
	return xxx_messageInfo_GatewayInfo.Size(m)
}
func (m *GatewayInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewayInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GatewayInfo proto.InternalMessageInfo

func (m *GatewayInfo) GetGatewayID() string {
	if m != nil {
		return m.GatewayID
	}
	return ""
}

func (m *GatewayInfo) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

func (m *GatewayInfo) GetIsConnected() bool {
	if m != nil {
		return m.IsConnected
	}
	return false
}

type GetListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetListRequest) Reset()         { *m = GetListRequest{} }
func (m *GetListRequest) String() string { return proto.CompactTextString(m) }
func (*GetListRequest) ProtoMessage()    {}
func (*GetListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{1}
}

func (m *GetListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetListRequest.Unmarshal(m, b)
}
func (m *GetListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetListRequest.Marshal(b, m, deterministic)
}
func (m *GetListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetListRequest.Merge(m, src)
}
func (m *GetListRequest) XXX_Size() int {
	return xxx_messageInfo_GetListRequest.Size(m)
}
func (m *GetListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetListRequest proto.InternalMessageInfo

type GetListResponse struct {
	GatewayIDs           []string `protobuf:"bytes,1,rep,name=gatewayIDs,proto3" json:"gatewayIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetListResponse) Reset()         { *m = GetListResponse{} }
func (m *GetListResponse) String() string { return proto.CompactTextString(m) }
func (*GetListResponse) ProtoMessage()    {}
func (*GetListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{2}
}

func (m *GetListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetListResponse.Unmarshal(m, b)
}
func (m *GetListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetListResponse.Marshal(b, m, deterministic)
}
func (m *GetListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetListResponse.Merge(m, src)
}
func (m *GetListResponse) XXX_Size() int {
	return xxx_messageInfo_GetListResponse.Size(m)
}
func (m *GetListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetListResponse proto.InternalMessageInfo

func (m *GetListResponse) GetGatewayIDs() []string {
	if m != nil {
		return m.GatewayIDs
	}
	return nil
}

type GetRequest struct {
	GatewayIDs           []string `protobuf:"bytes,1,rep,name=gatewayIDs,proto3" json:"gatewayIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{3}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetGatewayIDs() []string {
	if m != nil {
		return m.GatewayIDs
	}
	return nil
}

type GetResponse struct {
	GatewayInfos         []*GatewayInfo `protobuf:"bytes,1,rep,name=gatewayInfos,proto3" json:"gatewayInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{4}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetGatewayInfos() []*GatewayInfo {
	if m != nil {
		return m.GatewayInfos
	}
	return nil
}

type AddRequest struct {
	GatewayIDs           []string `protobuf:"bytes,1,rep,name=gatewayIDs,proto3" json:"gatewayIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{5}
}

func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetGatewayIDs() []string {
	if m != nil {
		return m.GatewayIDs
	}
	return nil
}

type AddResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddResponse) Reset()         { *m = AddResponse{} }
func (m *AddResponse) String() string { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()    {}
func (*AddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{6}
}

func (m *AddResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddResponse.Unmarshal(m, b)
}
func (m *AddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddResponse.Marshal(b, m, deterministic)
}
func (m *AddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResponse.Merge(m, src)
}
func (m *AddResponse) XXX_Size() int {
	return xxx_messageInfo_AddResponse.Size(m)
}
func (m *AddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddResponse proto.InternalMessageInfo

type DeleteRequest struct {
	GatewayIDs           []string `protobuf:"bytes,1,rep,name=gatewayIDs,proto3" json:"gatewayIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{7}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetGatewayIDs() []string {
	if m != nil {
		return m.GatewayIDs
	}
	return nil
}

type DeleteResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{8}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

type CreateCertificateRequest struct {
	GatewayID            string        `protobuf:"bytes,1,opt,name=gatewayID,proto3" json:"gatewayID,omitempty"`
	Subject              *cert.PKIName `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	ExpireAfterYears     int32         `protobuf:"varint,3,opt,name=expireAfterYears,proto3" json:"expireAfterYears,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateCertificateRequest) Reset()         { *m = CreateCertificateRequest{} }
func (m *CreateCertificateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCertificateRequest) ProtoMessage()    {}
func (*CreateCertificateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{9}
}

func (m *CreateCertificateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCertificateRequest.Unmarshal(m, b)
}
func (m *CreateCertificateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCertificateRequest.Marshal(b, m, deterministic)
}
func (m *CreateCertificateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCertificateRequest.Merge(m, src)
}
func (m *CreateCertificateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCertificateRequest.Size(m)
}
func (m *CreateCertificateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCertificateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCertificateRequest proto.InternalMessageInfo

func (m *CreateCertificateRequest) GetGatewayID() string {
	if m != nil {
		return m.GatewayID
	}
	return ""
}

func (m *CreateCertificateRequest) GetSubject() *cert.PKIName {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *CreateCertificateRequest) GetExpireAfterYears() int32 {
	if m != nil {
		return m.ExpireAfterYears
	}
	return 0
}

type CreateCertificateResponse struct {
	GatewayCert          string   `protobuf:"bytes,1,opt,name=gatewayCert,proto3" json:"gatewayCert,omitempty"`
	GatewayKey           string   `protobuf:"bytes,2,opt,name=gatewayKey,proto3" json:"gatewayKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCertificateResponse) Reset()         { *m = CreateCertificateResponse{} }
func (m *CreateCertificateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCertificateResponse) ProtoMessage()    {}
func (*CreateCertificateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{10}
}

func (m *CreateCertificateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCertificateResponse.Unmarshal(m, b)
}
func (m *CreateCertificateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCertificateResponse.Marshal(b, m, deterministic)
}
func (m *CreateCertificateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCertificateResponse.Merge(m, src)
}
func (m *CreateCertificateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCertificateResponse.Size(m)
}
func (m *CreateCertificateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCertificateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCertificateResponse proto.InternalMessageInfo

func (m *CreateCertificateResponse) GetGatewayCert() string {
	if m != nil {
		return m.GatewayCert
	}
	return ""
}

func (m *CreateCertificateResponse) GetGatewayKey() string {
	if m != nil {
		return m.GatewayKey
	}
	return ""
}

type GetIssuanceHistoryRequest struct {
	GatewayIDs           []string `protobuf:"bytes,1,rep,name=gatewayIDs,proto3" json:"gatewayIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIssuanceHistoryRequest) Reset()         { *m = GetIssuanceHistoryRequest{} }
func (m *GetIssuanceHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*GetIssuanceHistoryRequest) ProtoMessage()    {}
func (*GetIssuanceHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{11}
}

func (m *GetIssuanceHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIssuanceHistoryRequest.Unmarshal(m, b)
}
func (m *GetIssuanceHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIssuanceHistoryRequest.Marshal(b, m, deterministic)
}
func (m *GetIssuanceHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIssuanceHistoryRequest.Merge(m, src)
}
func (m *GetIssuanceHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_GetIssuanceHistoryRequest.Size(m)
}
func (m *GetIssuanceHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIssuanceHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetIssuanceHistoryRequest proto.InternalMessageInfo

func (m *GetIssuanceHistoryRequest) GetGatewayIDs() []string {
	if m != nil {
		return m.GatewayIDs
	}
	return nil
}

type CertificateInfo struct {
	GatewayID            string        `protobuf:"bytes,1,opt,name=gatewayID,proto3" json:"gatewayID,omitempty"`
	Subject              *cert.PKIName `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	SerialNO             int64         `protobuf:"varint,3,opt,name=serialNO,proto3" json:"serialNO,omitempty"`
	IssueDate            int64         `protobuf:"varint,4,opt,name=issueDate,proto3" json:"issueDate,omitempty"`
	ExpiryDate           int64         `protobuf:"varint,5,opt,name=expiryDate,proto3" json:"expiryDate,omitempty"`
	Blacklisted          bool          `protobuf:"varint,6,opt,name=blacklisted,proto3" json:"blacklisted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CertificateInfo) Reset()         { *m = CertificateInfo{} }
func (m *CertificateInfo) String() string { return proto.CompactTextString(m) }
func (*CertificateInfo) ProtoMessage()    {}
func (*CertificateInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{12}
}

func (m *CertificateInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CertificateInfo.Unmarshal(m, b)
}
func (m *CertificateInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CertificateInfo.Marshal(b, m, deterministic)
}
func (m *CertificateInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CertificateInfo.Merge(m, src)
}
func (m *CertificateInfo) XXX_Size() int {
	return xxx_messageInfo_CertificateInfo.Size(m)
}
func (m *CertificateInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CertificateInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CertificateInfo proto.InternalMessageInfo

func (m *CertificateInfo) GetGatewayID() string {
	if m != nil {
		return m.GatewayID
	}
	return ""
}

func (m *CertificateInfo) GetSubject() *cert.PKIName {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *CertificateInfo) GetSerialNO() int64 {
	if m != nil {
		return m.SerialNO
	}
	return 0
}

func (m *CertificateInfo) GetIssueDate() int64 {
	if m != nil {
		return m.IssueDate
	}
	return 0
}

func (m *CertificateInfo) GetExpiryDate() int64 {
	if m != nil {
		return m.ExpiryDate
	}
	return 0
}

func (m *CertificateInfo) GetBlacklisted() bool {
	if m != nil {
		return m.Blacklisted
	}
	return false
}

type GetIssuanceHistoryResponse struct {
	CertInfos            []*CertificateInfo `protobuf:"bytes,1,rep,name=certInfos,proto3" json:"certInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetIssuanceHistoryResponse) Reset()         { *m = GetIssuanceHistoryResponse{} }
func (m *GetIssuanceHistoryResponse) String() string { return proto.CompactTextString(m) }
func (*GetIssuanceHistoryResponse) ProtoMessage()    {}
func (*GetIssuanceHistoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{13}
}

func (m *GetIssuanceHistoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIssuanceHistoryResponse.Unmarshal(m, b)
}
func (m *GetIssuanceHistoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIssuanceHistoryResponse.Marshal(b, m, deterministic)
}
func (m *GetIssuanceHistoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIssuanceHistoryResponse.Merge(m, src)
}
func (m *GetIssuanceHistoryResponse) XXX_Size() int {
	return xxx_messageInfo_GetIssuanceHistoryResponse.Size(m)
}
func (m *GetIssuanceHistoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIssuanceHistoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIssuanceHistoryResponse proto.InternalMessageInfo

func (m *GetIssuanceHistoryResponse) GetCertInfos() []*CertificateInfo {
	if m != nil {
		return m.CertInfos
	}
	return nil
}

type GetCertificateBlacklistRequest struct {
	GatewayIDs           []string `protobuf:"bytes,1,rep,name=gatewayIDs,proto3" json:"gatewayIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCertificateBlacklistRequest) Reset()         { *m = GetCertificateBlacklistRequest{} }
func (m *GetCertificateBlacklistRequest) String() string { return proto.CompactTextString(m) }
func (*GetCertificateBlacklistRequest) ProtoMessage()    {}
func (*GetCertificateBlacklistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{14}
}

func (m *GetCertificateBlacklistRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCertificateBlacklistRequest.Unmarshal(m, b)
}
func (m *GetCertificateBlacklistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCertificateBlacklistRequest.Marshal(b, m, deterministic)
}
func (m *GetCertificateBlacklistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCertificateBlacklistRequest.Merge(m, src)
}
func (m *GetCertificateBlacklistRequest) XXX_Size() int {
	return xxx_messageInfo_GetCertificateBlacklistRequest.Size(m)
}
func (m *GetCertificateBlacklistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCertificateBlacklistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCertificateBlacklistRequest proto.InternalMessageInfo

func (m *GetCertificateBlacklistRequest) GetGatewayIDs() []string {
	if m != nil {
		return m.GatewayIDs
	}
	return nil
}

type GetCertificateBlacklistResponse struct {
	CertInfos            []*CertificateInfo `protobuf:"bytes,1,rep,name=certInfos,proto3" json:"certInfos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetCertificateBlacklistResponse) Reset()         { *m = GetCertificateBlacklistResponse{} }
func (m *GetCertificateBlacklistResponse) String() string { return proto.CompactTextString(m) }
func (*GetCertificateBlacklistResponse) ProtoMessage()    {}
func (*GetCertificateBlacklistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{15}
}

func (m *GetCertificateBlacklistResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCertificateBlacklistResponse.Unmarshal(m, b)
}
func (m *GetCertificateBlacklistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCertificateBlacklistResponse.Marshal(b, m, deterministic)
}
func (m *GetCertificateBlacklistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCertificateBlacklistResponse.Merge(m, src)
}
func (m *GetCertificateBlacklistResponse) XXX_Size() int {
	return xxx_messageInfo_GetCertificateBlacklistResponse.Size(m)
}
func (m *GetCertificateBlacklistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCertificateBlacklistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCertificateBlacklistResponse proto.InternalMessageInfo

func (m *GetCertificateBlacklistResponse) GetCertInfos() []*CertificateInfo {
	if m != nil {
		return m.CertInfos
	}
	return nil
}

type AddCertificateBlacklistRequest struct {
	GatewayID            string   `protobuf:"bytes,1,opt,name=gatewayID,proto3" json:"gatewayID,omitempty"`
	SerialNOs            []int64  `protobuf:"varint,2,rep,packed,name=serialNOs,proto3" json:"serialNOs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddCertificateBlacklistRequest) Reset()         { *m = AddCertificateBlacklistRequest{} }
func (m *AddCertificateBlacklistRequest) String() string { return proto.CompactTextString(m) }
func (*AddCertificateBlacklistRequest) ProtoMessage()    {}
func (*AddCertificateBlacklistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{16}
}

func (m *AddCertificateBlacklistRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddCertificateBlacklistRequest.Unmarshal(m, b)
}
func (m *AddCertificateBlacklistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddCertificateBlacklistRequest.Marshal(b, m, deterministic)
}
func (m *AddCertificateBlacklistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCertificateBlacklistRequest.Merge(m, src)
}
func (m *AddCertificateBlacklistRequest) XXX_Size() int {
	return xxx_messageInfo_AddCertificateBlacklistRequest.Size(m)
}
func (m *AddCertificateBlacklistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCertificateBlacklistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddCertificateBlacklistRequest proto.InternalMessageInfo

func (m *AddCertificateBlacklistRequest) GetGatewayID() string {
	if m != nil {
		return m.GatewayID
	}
	return ""
}

func (m *AddCertificateBlacklistRequest) GetSerialNOs() []int64 {
	if m != nil {
		return m.SerialNOs
	}
	return nil
}

type AddCertificateBlacklistResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddCertificateBlacklistResponse) Reset()         { *m = AddCertificateBlacklistResponse{} }
func (m *AddCertificateBlacklistResponse) String() string { return proto.CompactTextString(m) }
func (*AddCertificateBlacklistResponse) ProtoMessage()    {}
func (*AddCertificateBlacklistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{17}
}

func (m *AddCertificateBlacklistResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddCertificateBlacklistResponse.Unmarshal(m, b)
}
func (m *AddCertificateBlacklistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddCertificateBlacklistResponse.Marshal(b, m, deterministic)
}
func (m *AddCertificateBlacklistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCertificateBlacklistResponse.Merge(m, src)
}
func (m *AddCertificateBlacklistResponse) XXX_Size() int {
	return xxx_messageInfo_AddCertificateBlacklistResponse.Size(m)
}
func (m *AddCertificateBlacklistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCertificateBlacklistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddCertificateBlacklistResponse proto.InternalMessageInfo

type DeleteCertificateBlacklistRequest struct {
	GatewayID            string   `protobuf:"bytes,1,opt,name=gatewayID,proto3" json:"gatewayID,omitempty"`
	SerialNOs            []int64  `protobuf:"varint,2,rep,packed,name=serialNOs,proto3" json:"serialNOs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCertificateBlacklistRequest) Reset()         { *m = DeleteCertificateBlacklistRequest{} }
func (m *DeleteCertificateBlacklistRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCertificateBlacklistRequest) ProtoMessage()    {}
func (*DeleteCertificateBlacklistRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{18}
}

func (m *DeleteCertificateBlacklistRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCertificateBlacklistRequest.Unmarshal(m, b)
}
func (m *DeleteCertificateBlacklistRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCertificateBlacklistRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCertificateBlacklistRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCertificateBlacklistRequest.Merge(m, src)
}
func (m *DeleteCertificateBlacklistRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCertificateBlacklistRequest.Size(m)
}
func (m *DeleteCertificateBlacklistRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCertificateBlacklistRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCertificateBlacklistRequest proto.InternalMessageInfo

func (m *DeleteCertificateBlacklistRequest) GetGatewayID() string {
	if m != nil {
		return m.GatewayID
	}
	return ""
}

func (m *DeleteCertificateBlacklistRequest) GetSerialNOs() []int64 {
	if m != nil {
		return m.SerialNOs
	}
	return nil
}

type DeleteCertificateBlacklistResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCertificateBlacklistResponse) Reset()         { *m = DeleteCertificateBlacklistResponse{} }
func (m *DeleteCertificateBlacklistResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteCertificateBlacklistResponse) ProtoMessage()    {}
func (*DeleteCertificateBlacklistResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{19}
}

func (m *DeleteCertificateBlacklistResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCertificateBlacklistResponse.Unmarshal(m, b)
}
func (m *DeleteCertificateBlacklistResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCertificateBlacklistResponse.Marshal(b, m, deterministic)
}
func (m *DeleteCertificateBlacklistResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCertificateBlacklistResponse.Merge(m, src)
}
func (m *DeleteCertificateBlacklistResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteCertificateBlacklistResponse.Size(m)
}
func (m *DeleteCertificateBlacklistResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCertificateBlacklistResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCertificateBlacklistResponse proto.InternalMessageInfo

type SubscribeStatusRequest struct {
	QueueSize            int32    `protobuf:"varint,1,opt,name=queueSize,proto3" json:"queueSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeStatusRequest) Reset()         { *m = SubscribeStatusRequest{} }
func (m *SubscribeStatusRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeStatusRequest) ProtoMessage()    {}
func (*SubscribeStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{20}
}

func (m *SubscribeStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeStatusRequest.Unmarshal(m, b)
}
func (m *SubscribeStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeStatusRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeStatusRequest.Merge(m, src)
}
func (m *SubscribeStatusRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeStatusRequest.Size(m)
}
func (m *SubscribeStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeStatusRequest proto.InternalMessageInfo

func (m *SubscribeStatusRequest) GetQueueSize() int32 {
	if m != nil {
		return m.QueueSize
	}
	return 0
}

type StatusChange struct {
	GatewayID            string   `protobuf:"bytes,1,opt,name=gatewayID,proto3" json:"gatewayID,omitempty"`
	Status               Status   `protobuf:"varint,2,opt,name=status,proto3,enum=gateway.Status" json:"status,omitempty"`
	Timestamp            uint32   `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusChange) Reset()         { *m = StatusChange{} }
func (m *StatusChange) String() string { return proto.CompactTextString(m) }
func (*StatusChange) ProtoMessage()    {}
func (*StatusChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_f1a937782ebbded5, []int{21}
}

func (m *StatusChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusChange.Unmarshal(m, b)
}
func (m *StatusChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusChange.Marshal(b, m, deterministic)
}
func (m *StatusChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusChange.Merge(m, src)
}
func (m *StatusChange) XXX_Size() int {
	return xxx_messageInfo_StatusChange.Size(m)
}
func (m *StatusChange) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusChange.DiscardUnknown(m)
}

var xxx_messageInfo_StatusChange proto.InternalMessageInfo

func (m *StatusChange) GetGatewayID() string {
	if m != nil {
		return m.GatewayID
	}
	return ""
}

func (m *StatusChange) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_DISCONNECTED
}

func (m *StatusChange) GetTimestamp() uint32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func init() {
	proto.RegisterEnum("gateway.Status", Status_name, Status_value)
	proto.RegisterType((*GatewayInfo)(nil), "gateway.GatewayInfo")
	proto.RegisterType((*GetListRequest)(nil), "gateway.GetListRequest")
	proto.RegisterType((*GetListResponse)(nil), "gateway.GetListResponse")
	proto.RegisterType((*GetRequest)(nil), "gateway.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "gateway.GetResponse")
	proto.RegisterType((*AddRequest)(nil), "gateway.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "gateway.AddResponse")
	proto.RegisterType((*DeleteRequest)(nil), "gateway.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "gateway.DeleteResponse")
	proto.RegisterType((*CreateCertificateRequest)(nil), "gateway.CreateCertificateRequest")
	proto.RegisterType((*CreateCertificateResponse)(nil), "gateway.CreateCertificateResponse")
	proto.RegisterType((*GetIssuanceHistoryRequest)(nil), "gateway.GetIssuanceHistoryRequest")
	proto.RegisterType((*CertificateInfo)(nil), "gateway.CertificateInfo")
	proto.RegisterType((*GetIssuanceHistoryResponse)(nil), "gateway.GetIssuanceHistoryResponse")
	proto.RegisterType((*GetCertificateBlacklistRequest)(nil), "gateway.GetCertificateBlacklistRequest")
	proto.RegisterType((*GetCertificateBlacklistResponse)(nil), "gateway.GetCertificateBlacklistResponse")
	proto.RegisterType((*AddCertificateBlacklistRequest)(nil), "gateway.AddCertificateBlacklistRequest")
	proto.RegisterType((*AddCertificateBlacklistResponse)(nil), "gateway.AddCertificateBlacklistResponse")
	proto.RegisterType((*DeleteCertificateBlacklistRequest)(nil), "gateway.DeleteCertificateBlacklistRequest")
	proto.RegisterType((*DeleteCertificateBlacklistResponse)(nil), "gateway.DeleteCertificateBlacklistResponse")
	proto.RegisterType((*SubscribeStatusRequest)(nil), "gateway.SubscribeStatusRequest")
	proto.RegisterType((*StatusChange)(nil), "gateway.StatusChange")
}

func init() { proto.RegisterFile("gateway.proto", fileDescriptor_f1a937782ebbded5) }

var fileDescriptor_f1a937782ebbded5 = []byte{
	// 823 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xed, 0x6e, 0xea, 0x46,
	0x10, 0xad, 0x43, 0x03, 0x61, 0x08, 0x81, 0x6e, 0xd3, 0xe0, 0x58, 0x55, 0x42, 0xdc, 0x4a, 0xa1,
	0x69, 0x45, 0x52, 0x2a, 0xa5, 0xad, 0xda, 0x1f, 0x25, 0x10, 0x51, 0x44, 0x45, 0x22, 0x93, 0x3f,
	0x89, 0x1a, 0x55, 0xc6, 0x9e, 0xa4, 0x6e, 0x00, 0x13, 0xef, 0xba, 0x2d, 0x7d, 0x87, 0x3e, 0xd4,
	0x7d, 0x87, 0xfb, 0x40, 0x57, 0xb6, 0xd7, 0xec, 0xf2, 0x65, 0x90, 0xae, 0xee, 0x4f, 0x9f, 0x39,
	0x33, 0x67, 0x3c, 0xbb, 0x67, 0x6c, 0xc8, 0x3f, 0x9b, 0x0c, 0xff, 0x31, 0x27, 0xd5, 0xb1, 0xe7,
	0x32, 0x97, 0x64, 0xf8, 0xa3, 0x06, 0x16, 0x7a, 0x2c, 0x02, 0xf5, 0x17, 0xc8, 0xb5, 0x22, 0xb8,
	0x3d, 0x7a, 0x72, 0xc9, 0xe7, 0x90, 0xe5, 0xac, 0x76, 0x53, 0x55, 0xca, 0x4a, 0x25, 0x6b, 0x08,
	0x20, 0x88, 0xda, 0xf8, 0xb7, 0x63, 0x61, 0xbb, 0x49, 0xd5, 0xad, 0x72, 0xaa, 0x92, 0x37, 0x04,
	0x40, 0xca, 0x90, 0x73, 0x68, 0xc3, 0x1d, 0x8d, 0xd0, 0x62, 0x68, 0xab, 0xa9, 0xb2, 0x52, 0xd9,
	0x31, 0x64, 0x48, 0x2f, 0xc2, 0x5e, 0x0b, 0xd9, 0x6f, 0x0e, 0x65, 0x06, 0xbe, 0xfa, 0x48, 0x99,
	0xfe, 0x2d, 0x14, 0xa6, 0x08, 0x1d, 0xbb, 0x23, 0x8a, 0xe4, 0x08, 0x60, 0xaa, 0x48, 0x55, 0xa5,
	0x9c, 0xaa, 0x64, 0x0d, 0x09, 0xd1, 0xbf, 0x01, 0x68, 0x61, 0x5c, 0x60, 0x2d, 0xbb, 0x05, 0xb9,
	0x90, 0xcd, 0x8b, 0xff, 0x00, 0xbb, 0xcf, 0xe2, 0x75, 0xa3, 0x84, 0x5c, 0x6d, 0xbf, 0x1a, 0x4f,
	0x4a, 0x9a, 0x85, 0x31, 0xc3, 0x0c, 0x64, 0xeb, 0xb6, 0xbd, 0xa9, 0x6c, 0x1e, 0x72, 0x21, 0x3b,
	0x92, 0xd5, 0xcf, 0x21, 0xdf, 0xc4, 0x01, 0x32, 0xdc, 0x34, 0xbf, 0x08, 0x7b, 0x71, 0x02, 0x2f,
	0xf1, 0xbf, 0x02, 0x6a, 0xc3, 0x43, 0x93, 0x61, 0x03, 0x3d, 0xe6, 0x3c, 0x39, 0x96, 0x29, 0xca,
	0x25, 0x1f, 0xdb, 0x29, 0x64, 0xa8, 0xdf, 0xff, 0x0b, 0x2d, 0xa6, 0x6e, 0x95, 0x95, 0x4a, 0xae,
	0x96, 0xaf, 0x86, 0x37, 0xe0, 0xb6, 0xd3, 0xee, 0x9a, 0x43, 0x34, 0xe2, 0x28, 0x39, 0x83, 0x22,
	0xfe, 0x3b, 0x76, 0x3c, 0xac, 0x3f, 0x31, 0xf4, 0xee, 0xd1, 0xf4, 0x68, 0x78, 0x8c, 0xdb, 0xc6,
	0x02, 0xae, 0x3f, 0xc2, 0xe1, 0x92, 0x76, 0xf8, 0x98, 0xcb, 0x90, 0xe3, 0xf2, 0x41, 0x94, 0x77,
	0x24, 0x43, 0xd2, 0x00, 0x3a, 0x38, 0x09, 0xdb, 0x12, 0x03, 0xe8, 0xe0, 0x44, 0xff, 0x09, 0x0e,
	0x5b, 0xc8, 0xda, 0x94, 0xfa, 0xe6, 0xc8, 0xc2, 0x5f, 0x1d, 0xca, 0x5c, 0x6f, 0xb2, 0xe9, 0xf4,
	0xde, 0x2a, 0x50, 0x90, 0xda, 0xda, 0xe0, 0x66, 0x6f, 0x3c, 0x22, 0x0d, 0x76, 0x28, 0x7a, 0x8e,
	0x39, 0xe8, 0xde, 0x84, 0xa3, 0x49, 0x19, 0xd3, 0xe7, 0x40, 0xc2, 0xa1, 0xd4, 0xc7, 0xa6, 0xc9,
	0x50, 0xfd, 0x38, 0x0c, 0x0a, 0x20, 0x68, 0x3a, 0x1c, 0xe2, 0x24, 0x0c, 0x6f, 0x87, 0x61, 0x09,
	0x09, 0x66, 0xd6, 0x1f, 0x98, 0xd6, 0xcb, 0xc0, 0xa1, 0x81, 0x7d, 0xd2, 0x91, 0x7d, 0x24, 0x48,
	0xbf, 0x03, 0x6d, 0xd9, 0x4c, 0xf8, 0xcc, 0x2f, 0x21, 0x1b, 0xb4, 0x2c, 0xdf, 0x6b, 0x75, 0x7a,
	0xaf, 0xe7, 0xa6, 0x61, 0x08, 0xaa, 0xfe, 0x0b, 0x1c, 0xb5, 0x90, 0x49, 0x84, 0xab, 0x58, 0x72,
	0xd3, 0x71, 0xdf, 0xc3, 0xf1, 0xca, 0x0a, 0xef, 0xd9, 0xdc, 0xef, 0x70, 0x54, 0xb7, 0xed, 0xa4,
	0xe6, 0xd6, 0x6e, 0xac, 0xf8, 0x78, 0xa2, 0x8d, 0x95, 0x32, 0x04, 0xa0, 0x9f, 0xc0, 0xf1, 0xca,
	0xea, 0xdc, 0x76, 0x7f, 0xc0, 0x49, 0x64, 0xc4, 0x0f, 0xd5, 0xc3, 0x97, 0xa0, 0x27, 0x09, 0xf0,
	0x36, 0x2e, 0xe1, 0xa0, 0xe7, 0xf7, 0xa9, 0xe5, 0x39, 0x7d, 0xec, 0x31, 0x93, 0xf9, 0x54, 0xd2,
	0x7e, 0xf5, 0xd1, 0xc7, 0x9e, 0xf3, 0x1f, 0x86, 0xda, 0xdb, 0x86, 0x00, 0x74, 0x0a, 0xbb, 0x11,
	0xbd, 0xf1, 0xa7, 0x39, 0x7a, 0xc6, 0xb5, 0x2e, 0x48, 0xd3, 0x90, 0x1d, 0x9a, 0x60, 0xaf, 0x56,
	0x98, 0x1e, 0x11, 0xd7, 0xe4, 0xe1, 0xa0, 0x0c, 0x73, 0x86, 0x48, 0x99, 0x39, 0x1c, 0x87, 0x36,
	0xc8, 0x1b, 0x02, 0x38, 0xfb, 0x0a, 0xd2, 0x11, 0x9f, 0x14, 0x61, 0xb7, 0xd9, 0xee, 0x35, 0x6e,
	0xba, 0xdd, 0xeb, 0xc6, 0xdd, 0x75, 0xb3, 0xf8, 0x11, 0xc9, 0x43, 0x56, 0x3c, 0x2a, 0xb5, 0x37,
	0x69, 0xc8, 0xf0, 0x9d, 0x4b, 0x7e, 0x86, 0x0c, 0xff, 0x16, 0x90, 0x92, 0x58, 0xc8, 0x33, 0xdf,
	0x0b, 0x4d, 0x5d, 0x0c, 0xf0, 0x1b, 0x76, 0x01, 0xa9, 0x16, 0x32, 0xf2, 0xa9, 0x4c, 0x88, 0xb3,
	0xf6, 0x67, 0x41, 0x91, 0x51, 0xb7, 0x6d, 0x29, 0x43, 0xec, 0x77, 0x29, 0x43, 0x5a, 0xe3, 0xe4,
	0x47, 0x48, 0x47, 0x67, 0x45, 0x0e, 0xa6, 0xf1, 0x99, 0xbd, 0xae, 0x95, 0x16, 0x70, 0x9e, 0xfa,
	0x00, 0x9f, 0x2c, 0xac, 0x4b, 0x72, 0x22, 0x2c, 0xb0, 0x62, 0xb3, 0x6b, 0x7a, 0x12, 0x85, 0xd7,
	0x7e, 0x04, 0xb2, 0xb8, 0x17, 0x88, 0x2e, 0xbf, 0xf4, 0xf2, 0x45, 0xaa, 0x7d, 0x91, 0xc8, 0xe1,
	0xe5, 0x07, 0x50, 0x5a, 0x61, 0x6f, 0x72, 0x2a, 0xe7, 0x27, 0x38, 0x44, 0xab, 0xac, 0x27, 0x0a,
	0xb5, 0x15, 0x9e, 0x94, 0xd4, 0x92, 0x77, 0x82, 0xa4, 0xb6, 0xc6, 0xde, 0xc4, 0x07, 0x6d, 0xb5,
	0xfb, 0xc8, 0xd9, 0xdc, 0x69, 0x26, 0x69, 0x7e, 0xbd, 0x11, 0x97, 0xcb, 0x76, 0xa0, 0x30, 0x67,
	0x67, 0x72, 0x2c, 0xbc, 0xb6, 0xd4, 0xe8, 0xda, 0x67, 0x73, 0x66, 0x8c, 0x1c, 0x7d, 0xa1, 0x5c,
	0x7d, 0x0f, 0x9a, 0xe5, 0x0e, 0xab, 0xd4, 0x1f, 0x7b, 0x38, 0x34, 0x9d, 0x91, 0x55, 0xa5, 0xf6,
	0x4b, 0x4c, 0xbe, 0x55, 0x1e, 0x4a, 0x7d, 0xc7, 0xa5, 0xcc, 0xf4, 0xce, 0x29, 0x7a, 0xc1, 0xbf,
	0xda, 0x39, 0x0f, 0xf5, 0xd3, 0xe1, 0x2f, 0xe0, 0x77, 0xef, 0x02, 0x00, 0x00, 0xff, 0xff, 0xb5,
	0x2a, 0xbf, 0xfc, 0x28, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GatewayClient is the client API for Gateway service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GatewayClient interface {
	GetList(ctx context.Context, in *GetListRequest, opts ...grpc.CallOption) (*GetListResponse, error)
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	CreateCertificate(ctx context.Context, in *CreateCertificateRequest, opts ...grpc.CallOption) (*CreateCertificateResponse, error)
	GetIssuanceHistory(ctx context.Context, in *GetIssuanceHistoryRequest, opts ...grpc.CallOption) (*GetIssuanceHistoryResponse, error)
	GetCertificateBlacklist(ctx context.Context, in *GetCertificateBlacklistRequest, opts ...grpc.CallOption) (*GetCertificateBlacklistResponse, error)
	AddCertificateBlacklist(ctx context.Context, in *AddCertificateBlacklistRequest, opts ...grpc.CallOption) (*AddCertificateBlacklistResponse, error)
	DeleteCertificateBlacklist(ctx context.Context, in *DeleteCertificateBlacklistRequest, opts ...grpc.CallOption) (*DeleteCertificateBlacklistResponse, error)
	SubscribeStatus(ctx context.Context, in *SubscribeStatusRequest, opts ...grpc.CallOption) (Gateway_SubscribeStatusClient, error)
}

type gatewayClient struct {
	cc *grpc.ClientConn
}

func NewGatewayClient(cc *grpc.ClientConn) GatewayClient {
	return &gatewayClient{cc}
}

func (c *gatewayClient) GetList(ctx context.Context, in *GetListRequest, opts ...grpc.CallOption) (*GetListResponse, error) {
	out := new(GetListResponse)
	err := c.cc.Invoke(ctx, "/gateway.Gateway/GetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/gateway.Gateway/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := c.cc.Invoke(ctx, "/gateway.Gateway/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/gateway.Gateway/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) CreateCertificate(ctx context.Context, in *CreateCertificateRequest, opts ...grpc.CallOption) (*CreateCertificateResponse, error) {
	out := new(CreateCertificateResponse)
	err := c.cc.Invoke(ctx, "/gateway.Gateway/CreateCertificate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) GetIssuanceHistory(ctx context.Context, in *GetIssuanceHistoryRequest, opts ...grpc.CallOption) (*GetIssuanceHistoryResponse, error) {
	out := new(GetIssuanceHistoryResponse)
	err := c.cc.Invoke(ctx, "/gateway.Gateway/GetIssuanceHistory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) GetCertificateBlacklist(ctx context.Context, in *GetCertificateBlacklistRequest, opts ...grpc.CallOption) (*GetCertificateBlacklistResponse, error) {
	out := new(GetCertificateBlacklistResponse)
	err := c.cc.Invoke(ctx, "/gateway.Gateway/GetCertificateBlacklist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) AddCertificateBlacklist(ctx context.Context, in *AddCertificateBlacklistRequest, opts ...grpc.CallOption) (*AddCertificateBlacklistResponse, error) {
	out := new(AddCertificateBlacklistResponse)
	err := c.cc.Invoke(ctx, "/gateway.Gateway/AddCertificateBlacklist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) DeleteCertificateBlacklist(ctx context.Context, in *DeleteCertificateBlacklistRequest, opts ...grpc.CallOption) (*DeleteCertificateBlacklistResponse, error) {
	out := new(DeleteCertificateBlacklistResponse)
	err := c.cc.Invoke(ctx, "/gateway.Gateway/DeleteCertificateBlacklist", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) SubscribeStatus(ctx context.Context, in *SubscribeStatusRequest, opts ...grpc.CallOption) (Gateway_SubscribeStatusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Gateway_serviceDesc.Streams[0], "/gateway.Gateway/SubscribeStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &gatewaySubscribeStatusClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Gateway_SubscribeStatusClient interface {
	Recv() (*StatusChange, error)
	grpc.ClientStream
}

type gatewaySubscribeStatusClient struct {
	grpc.ClientStream
}

func (x *gatewaySubscribeStatusClient) Recv() (*StatusChange, error) {
	m := new(StatusChange)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GatewayServer is the server API for Gateway service.
type GatewayServer interface {
	GetList(context.Context, *GetListRequest) (*GetListResponse, error)
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Add(context.Context, *AddRequest) (*AddResponse, error)
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
	CreateCertificate(context.Context, *CreateCertificateRequest) (*CreateCertificateResponse, error)
	GetIssuanceHistory(context.Context, *GetIssuanceHistoryRequest) (*GetIssuanceHistoryResponse, error)
	GetCertificateBlacklist(context.Context, *GetCertificateBlacklistRequest) (*GetCertificateBlacklistResponse, error)
	AddCertificateBlacklist(context.Context, *AddCertificateBlacklistRequest) (*AddCertificateBlacklistResponse, error)
	DeleteCertificateBlacklist(context.Context, *DeleteCertificateBlacklistRequest) (*DeleteCertificateBlacklistResponse, error)
	SubscribeStatus(*SubscribeStatusRequest, Gateway_SubscribeStatusServer) error
}

func RegisterGatewayServer(s *grpc.Server, srv GatewayServer) {
	s.RegisterService(&_Gateway_serviceDesc, srv)
}

func _Gateway_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway.Gateway/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).GetList(ctx, req.(*GetListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway.Gateway/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway.Gateway/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway.Gateway/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_CreateCertificate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCertificateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).CreateCertificate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway.Gateway/CreateCertificate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).CreateCertificate(ctx, req.(*CreateCertificateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_GetIssuanceHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIssuanceHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).GetIssuanceHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway.Gateway/GetIssuanceHistory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).GetIssuanceHistory(ctx, req.(*GetIssuanceHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_GetCertificateBlacklist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCertificateBlacklistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).GetCertificateBlacklist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway.Gateway/GetCertificateBlacklist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).GetCertificateBlacklist(ctx, req.(*GetCertificateBlacklistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_AddCertificateBlacklist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCertificateBlacklistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).AddCertificateBlacklist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway.Gateway/AddCertificateBlacklist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).AddCertificateBlacklist(ctx, req.(*AddCertificateBlacklistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_DeleteCertificateBlacklist_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCertificateBlacklistRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).DeleteCertificateBlacklist(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway.Gateway/DeleteCertificateBlacklist",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).DeleteCertificateBlacklist(ctx, req.(*DeleteCertificateBlacklistRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_SubscribeStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeStatusRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GatewayServer).SubscribeStatus(m, &gatewaySubscribeStatusServer{stream})
}

type Gateway_SubscribeStatusServer interface {
	Send(*StatusChange) error
	grpc.ServerStream
}

type gatewaySubscribeStatusServer struct {
	grpc.ServerStream
}

func (x *gatewaySubscribeStatusServer) Send(m *StatusChange) error {
	return x.ServerStream.SendMsg(m)
}

var _Gateway_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gateway.Gateway",
	HandlerType: (*GatewayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetList",
			Handler:    _Gateway_GetList_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Gateway_Get_Handler,
		},
		{
			MethodName: "Add",
			Handler:    _Gateway_Add_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Gateway_Delete_Handler,
		},
		{
			MethodName: "CreateCertificate",
			Handler:    _Gateway_CreateCertificate_Handler,
		},
		{
			MethodName: "GetIssuanceHistory",
			Handler:    _Gateway_GetIssuanceHistory_Handler,
		},
		{
			MethodName: "GetCertificateBlacklist",
			Handler:    _Gateway_GetCertificateBlacklist_Handler,
		},
		{
			MethodName: "AddCertificateBlacklist",
			Handler:    _Gateway_AddCertificateBlacklist_Handler,
		},
		{
			MethodName: "DeleteCertificateBlacklist",
			Handler:    _Gateway_DeleteCertificateBlacklist_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeStatus",
			Handler:       _Gateway_SubscribeStatus_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "gateway.proto",
}
