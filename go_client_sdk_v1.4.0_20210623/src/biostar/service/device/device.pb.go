// Code generated by protoc-gen-go. DO NOT EDIT.
// source: device.proto

package device

import (
	err "biostar/service/err"
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Type int32

const (
	Type_UNDEFINED         Type = 0
	Type_BIOENTRY_PLUS     Type = 1
	Type_BIOENTRY_W        Type = 2
	Type_BIOLITE_NET       Type = 3
	Type_XPASS             Type = 4
	Type_XPASS_S2          Type = 5
	Type_ENTRY_MAX         Type = 5
	Type_SECURE_IO_2       Type = 6
	Type_DOOR_MODULE_20    Type = 7
	Type_BIOSTATION_2      Type = 8
	Type_BIOSTATION_A2     Type = 9
	Type_FACESTATION_2     Type = 10
	Type_IO_DEVICE         Type = 11
	Type_BIOSTATION_L2     Type = 12
	Type_BIOENTRY_W2       Type = 13
	Type_RS485_SLAVE       Type = 128
	Type_CORESTATION_40    Type = 14
	Type_OUTPUT_MODULE     Type = 15
	Type_INPUT_MODULE      Type = 16
	Type_BIOENTRY_P2       Type = 17
	Type_BIOLITE_N2        Type = 18
	Type_XPASS2            Type = 19
	Type_XPASS_S3          Type = 20
	Type_BIOENTRY_R2       Type = 21
	Type_XPASS_D2          Type = 22
	Type_DOOR_MODULE_21    Type = 23
	Type_XPASS_D2_KEYPAD   Type = 24
	Type_FACELITE          Type = 25
	Type_XPASS2_KEYPAD     Type = 26
	Type_FACESTATION_F2_FP Type = 29
	Type_FACESTATION_F2    Type = 30
	Type_XSTATION_2_QR     Type = 31
	Type_XSTATION_2        Type = 32
	Type_IM_120            Type = 33
	Type_UNKNOWN           Type = 255
)

var Type_name = map[int32]string{
	0: "UNDEFINED",
	1: "BIOENTRY_PLUS",
	2: "BIOENTRY_W",
	3: "BIOLITE_NET",
	4: "XPASS",
	5: "XPASS_S2",
	// Duplicate value: 5: "ENTRY_MAX",
	6:   "SECURE_IO_2",
	7:   "DOOR_MODULE_20",
	8:   "BIOSTATION_2",
	9:   "BIOSTATION_A2",
	10:  "FACESTATION_2",
	11:  "IO_DEVICE",
	12:  "BIOSTATION_L2",
	13:  "BIOENTRY_W2",
	128: "RS485_SLAVE",
	14:  "CORESTATION_40",
	15:  "OUTPUT_MODULE",
	16:  "INPUT_MODULE",
	17:  "BIOENTRY_P2",
	18:  "BIOLITE_N2",
	19:  "XPASS2",
	20:  "XPASS_S3",
	21:  "BIOENTRY_R2",
	22:  "XPASS_D2",
	23:  "DOOR_MODULE_21",
	24:  "XPASS_D2_KEYPAD",
	25:  "FACELITE",
	26:  "XPASS2_KEYPAD",
	29:  "FACESTATION_F2_FP",
	30:  "FACESTATION_F2",
	31:  "XSTATION_2_QR",
	32:  "XSTATION_2",
	33:  "IM_120",
	255: "UNKNOWN",
}

var Type_value = map[string]int32{
	"UNDEFINED":         0,
	"BIOENTRY_PLUS":     1,
	"BIOENTRY_W":        2,
	"BIOLITE_NET":       3,
	"XPASS":             4,
	"XPASS_S2":          5,
	"ENTRY_MAX":         5,
	"SECURE_IO_2":       6,
	"DOOR_MODULE_20":    7,
	"BIOSTATION_2":      8,
	"BIOSTATION_A2":     9,
	"FACESTATION_2":     10,
	"IO_DEVICE":         11,
	"BIOSTATION_L2":     12,
	"BIOENTRY_W2":       13,
	"RS485_SLAVE":       128,
	"CORESTATION_40":    14,
	"OUTPUT_MODULE":     15,
	"INPUT_MODULE":      16,
	"BIOENTRY_P2":       17,
	"BIOLITE_N2":        18,
	"XPASS2":            19,
	"XPASS_S3":          20,
	"BIOENTRY_R2":       21,
	"XPASS_D2":          22,
	"DOOR_MODULE_21":    23,
	"XPASS_D2_KEYPAD":   24,
	"FACELITE":          25,
	"XPASS2_KEYPAD":     26,
	"FACESTATION_F2_FP": 29,
	"FACESTATION_F2":    30,
	"XSTATION_2_QR":     31,
	"XSTATION_2":        32,
	"IM_120":            33,
	"UNKNOWN":           255,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}

func (Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{0}
}

type SwitchType int32

const (
	SwitchType_NORMALLY_OPEN   SwitchType = 0
	SwitchType_NORMALLY_CLOSED SwitchType = 1
)

var SwitchType_name = map[int32]string{
	0: "NORMALLY_OPEN",
	1: "NORMALLY_CLOSED",
}

var SwitchType_value = map[string]int32{
	"NORMALLY_OPEN":   0,
	"NORMALLY_CLOSED": 1,
}

func (x SwitchType) String() string {
	return proto.EnumName(SwitchType_name, int32(x))
}

func (SwitchType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{1}
}

type LEDColor int32

const (
	LEDColor_LED_COLOR_OFF     LEDColor = 0
	LEDColor_LED_COLOR_RED     LEDColor = 1
	LEDColor_LED_COLOR_YELLOW  LEDColor = 2
	LEDColor_LED_COLOR_GREEN   LEDColor = 3
	LEDColor_LED_COLOR_CYAN    LEDColor = 4
	LEDColor_LED_COLOR_BLUE    LEDColor = 5
	LEDColor_LED_COLOR_MAGENTA LEDColor = 6
	LEDColor_LED_COLOR_WHITE   LEDColor = 7
)

var LEDColor_name = map[int32]string{
	0: "LED_COLOR_OFF",
	1: "LED_COLOR_RED",
	2: "LED_COLOR_YELLOW",
	3: "LED_COLOR_GREEN",
	4: "LED_COLOR_CYAN",
	5: "LED_COLOR_BLUE",
	6: "LED_COLOR_MAGENTA",
	7: "LED_COLOR_WHITE",
}

var LEDColor_value = map[string]int32{
	"LED_COLOR_OFF":     0,
	"LED_COLOR_RED":     1,
	"LED_COLOR_YELLOW":  2,
	"LED_COLOR_GREEN":   3,
	"LED_COLOR_CYAN":    4,
	"LED_COLOR_BLUE":    5,
	"LED_COLOR_MAGENTA": 6,
	"LED_COLOR_WHITE":   7,
}

func (x LEDColor) String() string {
	return proto.EnumName(LEDColor_name, int32(x))
}

func (LEDColor) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{2}
}

type BuzzerTone int32

const (
	BuzzerTone_BUZZER_TONE_OFF    BuzzerTone = 0
	BuzzerTone_BUZZER_TONE_LOW    BuzzerTone = 1
	BuzzerTone_BUZZER_TONE_MIDDLE BuzzerTone = 2
	BuzzerTone_BUZZER_TONE_HIGH   BuzzerTone = 3
)

var BuzzerTone_name = map[int32]string{
	0: "BUZZER_TONE_OFF",
	1: "BUZZER_TONE_LOW",
	2: "BUZZER_TONE_MIDDLE",
	3: "BUZZER_TONE_HIGH",
}

var BuzzerTone_value = map[string]int32{
	"BUZZER_TONE_OFF":    0,
	"BUZZER_TONE_LOW":    1,
	"BUZZER_TONE_MIDDLE": 2,
	"BUZZER_TONE_HIGH":   3,
}

func (x BuzzerTone) String() string {
	return proto.EnumName(BuzzerTone_name, int32(x))
}

func (BuzzerTone) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{3}
}

type GetInfoRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInfoRequest) Reset()         { *m = GetInfoRequest{} }
func (m *GetInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetInfoRequest) ProtoMessage()    {}
func (*GetInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{0}
}

func (m *GetInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoRequest.Unmarshal(m, b)
}
func (m *GetInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoRequest.Merge(m, src)
}
func (m *GetInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetInfoRequest.Size(m)
}
func (m *GetInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoRequest proto.InternalMessageInfo

func (m *GetInfoRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type FactoryInfo struct {
	MACAddr              string   `protobuf:"bytes,2,opt,name=MACAddr,proto3" json:"MACAddr,omitempty"`
	ModelName            string   `protobuf:"bytes,3,opt,name=modelName,proto3" json:"modelName,omitempty"`
	FirmwareVersion      string   `protobuf:"bytes,4,opt,name=firmwareVersion,proto3" json:"firmwareVersion,omitempty"`
	KernelVersion        string   `protobuf:"bytes,5,opt,name=kernelVersion,proto3" json:"kernelVersion,omitempty"`
	BSCoreVersion        string   `protobuf:"bytes,6,opt,name=BSCoreVersion,proto3" json:"BSCoreVersion,omitempty"`
	BoardVersion         string   `protobuf:"bytes,7,opt,name=boardVersion,proto3" json:"boardVersion,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FactoryInfo) Reset()         { *m = FactoryInfo{} }
func (m *FactoryInfo) String() string { return proto.CompactTextString(m) }
func (*FactoryInfo) ProtoMessage()    {}
func (*FactoryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{1}
}

func (m *FactoryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FactoryInfo.Unmarshal(m, b)
}
func (m *FactoryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FactoryInfo.Marshal(b, m, deterministic)
}
func (m *FactoryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FactoryInfo.Merge(m, src)
}
func (m *FactoryInfo) XXX_Size() int {
	return xxx_messageInfo_FactoryInfo.Size(m)
}
func (m *FactoryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FactoryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FactoryInfo proto.InternalMessageInfo

func (m *FactoryInfo) GetMACAddr() string {
	if m != nil {
		return m.MACAddr
	}
	return ""
}

func (m *FactoryInfo) GetModelName() string {
	if m != nil {
		return m.ModelName
	}
	return ""
}

func (m *FactoryInfo) GetFirmwareVersion() string {
	if m != nil {
		return m.FirmwareVersion
	}
	return ""
}

func (m *FactoryInfo) GetKernelVersion() string {
	if m != nil {
		return m.KernelVersion
	}
	return ""
}

func (m *FactoryInfo) GetBSCoreVersion() string {
	if m != nil {
		return m.BSCoreVersion
	}
	return ""
}

func (m *FactoryInfo) GetBoardVersion() string {
	if m != nil {
		return m.BoardVersion
	}
	return ""
}

type GetInfoResponse struct {
	Info                 *FactoryInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetInfoResponse) Reset()         { *m = GetInfoResponse{} }
func (m *GetInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetInfoResponse) ProtoMessage()    {}
func (*GetInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{2}
}

func (m *GetInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInfoResponse.Unmarshal(m, b)
}
func (m *GetInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInfoResponse.Merge(m, src)
}
func (m *GetInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetInfoResponse.Size(m)
}
func (m *GetInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetInfoResponse proto.InternalMessageInfo

func (m *GetInfoResponse) GetInfo() *FactoryInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type GetCapabilityInfoRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCapabilityInfoRequest) Reset()         { *m = GetCapabilityInfoRequest{} }
func (m *GetCapabilityInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetCapabilityInfoRequest) ProtoMessage()    {}
func (*GetCapabilityInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{3}
}

func (m *GetCapabilityInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCapabilityInfoRequest.Unmarshal(m, b)
}
func (m *GetCapabilityInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCapabilityInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetCapabilityInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCapabilityInfoRequest.Merge(m, src)
}
func (m *GetCapabilityInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetCapabilityInfoRequest.Size(m)
}
func (m *GetCapabilityInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCapabilityInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCapabilityInfoRequest proto.InternalMessageInfo

func (m *GetCapabilityInfoRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type CapabilityInfo struct {
	Type                    Type   `protobuf:"varint,1,opt,name=type,proto3,enum=device.Type" json:"type,omitempty"`
	MaxNumOfUser            uint32 `protobuf:"varint,2,opt,name=maxNumOfUser,proto3" json:"maxNumOfUser,omitempty"`
	PINSupported            bool   `protobuf:"varint,3,opt,name=PINSupported,proto3" json:"PINSupported,omitempty"`
	CardSupported           bool   `protobuf:"varint,4,opt,name=cardSupported,proto3" json:"cardSupported,omitempty"`
	Card1XSupported         bool   `protobuf:"varint,5,opt,name=card1xSupported,proto3" json:"card1xSupported,omitempty"`
	SEOSSupported           bool   `protobuf:"varint,6,opt,name=SEOSSupported,proto3" json:"SEOSSupported,omitempty"`
	FingerSupported         bool   `protobuf:"varint,7,opt,name=fingerSupported,proto3" json:"fingerSupported,omitempty"`
	FaceSupported           bool   `protobuf:"varint,8,opt,name=faceSupported,proto3" json:"faceSupported,omitempty"`
	UserNameSupported       bool   `protobuf:"varint,10,opt,name=userNameSupported,proto3" json:"userNameSupported,omitempty"`
	UserPhotoSupported      bool   `protobuf:"varint,11,opt,name=userPhotoSupported,proto3" json:"userPhotoSupported,omitempty"`
	UserPhraseSupported     bool   `protobuf:"varint,12,opt,name=userPhraseSupported,proto3" json:"userPhraseSupported,omitempty"`
	AlphanumericIDSupported bool   `protobuf:"varint,13,opt,name=alphanumericIDSupported,proto3" json:"alphanumericIDSupported,omitempty"`
	//	bool SSLSupported
	WLANSupported          bool     `protobuf:"varint,20,opt,name=WLANSupported,proto3" json:"WLANSupported,omitempty"`
	ImageLogSupported      bool     `protobuf:"varint,21,opt,name=imageLogSupported,proto3" json:"imageLogSupported,omitempty"`
	VOIPSupported          bool     `protobuf:"varint,22,opt,name=VOIPSupported,proto3" json:"VOIPSupported,omitempty"`
	TNASupported           bool     `protobuf:"varint,30,opt,name=TNASupported,proto3" json:"TNASupported,omitempty"`
	JobCodeSupported       bool     `protobuf:"varint,31,opt,name=jobCodeSupported,proto3" json:"jobCodeSupported,omitempty"`
	WiegandSupported       bool     `protobuf:"varint,40,opt,name=wiegandSupported,proto3" json:"wiegandSupported,omitempty"`
	WiegandMultiSupported  bool     `protobuf:"varint,41,opt,name=wiegandMultiSupported,proto3" json:"wiegandMultiSupported,omitempty"`
	TriggerActionSupported bool     `protobuf:"varint,42,opt,name=triggerActionSupported,proto3" json:"triggerActionSupported,omitempty"`
	DSTSupported           bool     `protobuf:"varint,43,opt,name=DSTSupported,proto3" json:"DSTSupported,omitempty"`
	DNSSupported           bool     `protobuf:"varint,44,opt,name=DNSSupported,proto3" json:"DNSSupported,omitempty"`
	OSDPKeySupported       bool     `protobuf:"varint,50,opt,name=OSDPKeySupported,proto3" json:"OSDPKeySupported,omitempty"`
	RS485ExtSupported      bool     `protobuf:"varint,51,opt,name=RS485ExtSupported,proto3" json:"RS485ExtSupported,omitempty"`
	QRSupported            bool     `protobuf:"varint,60,opt,name=QRSupported,proto3" json:"QRSupported,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CapabilityInfo) Reset()         { *m = CapabilityInfo{} }
func (m *CapabilityInfo) String() string { return proto.CompactTextString(m) }
func (*CapabilityInfo) ProtoMessage()    {}
func (*CapabilityInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{4}
}

func (m *CapabilityInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapabilityInfo.Unmarshal(m, b)
}
func (m *CapabilityInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapabilityInfo.Marshal(b, m, deterministic)
}
func (m *CapabilityInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapabilityInfo.Merge(m, src)
}
func (m *CapabilityInfo) XXX_Size() int {
	return xxx_messageInfo_CapabilityInfo.Size(m)
}
func (m *CapabilityInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CapabilityInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CapabilityInfo proto.InternalMessageInfo

func (m *CapabilityInfo) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_UNDEFINED
}

func (m *CapabilityInfo) GetMaxNumOfUser() uint32 {
	if m != nil {
		return m.MaxNumOfUser
	}
	return 0
}

func (m *CapabilityInfo) GetPINSupported() bool {
	if m != nil {
		return m.PINSupported
	}
	return false
}

func (m *CapabilityInfo) GetCardSupported() bool {
	if m != nil {
		return m.CardSupported
	}
	return false
}

func (m *CapabilityInfo) GetCard1XSupported() bool {
	if m != nil {
		return m.Card1XSupported
	}
	return false
}

func (m *CapabilityInfo) GetSEOSSupported() bool {
	if m != nil {
		return m.SEOSSupported
	}
	return false
}

func (m *CapabilityInfo) GetFingerSupported() bool {
	if m != nil {
		return m.FingerSupported
	}
	return false
}

func (m *CapabilityInfo) GetFaceSupported() bool {
	if m != nil {
		return m.FaceSupported
	}
	return false
}

func (m *CapabilityInfo) GetUserNameSupported() bool {
	if m != nil {
		return m.UserNameSupported
	}
	return false
}

func (m *CapabilityInfo) GetUserPhotoSupported() bool {
	if m != nil {
		return m.UserPhotoSupported
	}
	return false
}

func (m *CapabilityInfo) GetUserPhraseSupported() bool {
	if m != nil {
		return m.UserPhraseSupported
	}
	return false
}

func (m *CapabilityInfo) GetAlphanumericIDSupported() bool {
	if m != nil {
		return m.AlphanumericIDSupported
	}
	return false
}

func (m *CapabilityInfo) GetWLANSupported() bool {
	if m != nil {
		return m.WLANSupported
	}
	return false
}

func (m *CapabilityInfo) GetImageLogSupported() bool {
	if m != nil {
		return m.ImageLogSupported
	}
	return false
}

func (m *CapabilityInfo) GetVOIPSupported() bool {
	if m != nil {
		return m.VOIPSupported
	}
	return false
}

func (m *CapabilityInfo) GetTNASupported() bool {
	if m != nil {
		return m.TNASupported
	}
	return false
}

func (m *CapabilityInfo) GetJobCodeSupported() bool {
	if m != nil {
		return m.JobCodeSupported
	}
	return false
}

func (m *CapabilityInfo) GetWiegandSupported() bool {
	if m != nil {
		return m.WiegandSupported
	}
	return false
}

func (m *CapabilityInfo) GetWiegandMultiSupported() bool {
	if m != nil {
		return m.WiegandMultiSupported
	}
	return false
}

func (m *CapabilityInfo) GetTriggerActionSupported() bool {
	if m != nil {
		return m.TriggerActionSupported
	}
	return false
}

func (m *CapabilityInfo) GetDSTSupported() bool {
	if m != nil {
		return m.DSTSupported
	}
	return false
}

func (m *CapabilityInfo) GetDNSSupported() bool {
	if m != nil {
		return m.DNSSupported
	}
	return false
}

func (m *CapabilityInfo) GetOSDPKeySupported() bool {
	if m != nil {
		return m.OSDPKeySupported
	}
	return false
}

func (m *CapabilityInfo) GetRS485ExtSupported() bool {
	if m != nil {
		return m.RS485ExtSupported
	}
	return false
}

func (m *CapabilityInfo) GetQRSupported() bool {
	if m != nil {
		return m.QRSupported
	}
	return false
}

type GetCapabilityInfoResponse struct {
	CapInfo              *CapabilityInfo `protobuf:"bytes,1,opt,name=capInfo,proto3" json:"capInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetCapabilityInfoResponse) Reset()         { *m = GetCapabilityInfoResponse{} }
func (m *GetCapabilityInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetCapabilityInfoResponse) ProtoMessage()    {}
func (*GetCapabilityInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{5}
}

func (m *GetCapabilityInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCapabilityInfoResponse.Unmarshal(m, b)
}
func (m *GetCapabilityInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCapabilityInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetCapabilityInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCapabilityInfoResponse.Merge(m, src)
}
func (m *GetCapabilityInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetCapabilityInfoResponse.Size(m)
}
func (m *GetCapabilityInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCapabilityInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCapabilityInfoResponse proto.InternalMessageInfo

func (m *GetCapabilityInfoResponse) GetCapInfo() *CapabilityInfo {
	if m != nil {
		return m.CapInfo
	}
	return nil
}

type DeleteRootCARequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRootCARequest) Reset()         { *m = DeleteRootCARequest{} }
func (m *DeleteRootCARequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRootCARequest) ProtoMessage()    {}
func (*DeleteRootCARequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{6}
}

func (m *DeleteRootCARequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRootCARequest.Unmarshal(m, b)
}
func (m *DeleteRootCARequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRootCARequest.Marshal(b, m, deterministic)
}
func (m *DeleteRootCARequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRootCARequest.Merge(m, src)
}
func (m *DeleteRootCARequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRootCARequest.Size(m)
}
func (m *DeleteRootCARequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRootCARequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRootCARequest proto.InternalMessageInfo

func (m *DeleteRootCARequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type DeleteRootCAResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRootCAResponse) Reset()         { *m = DeleteRootCAResponse{} }
func (m *DeleteRootCAResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteRootCAResponse) ProtoMessage()    {}
func (*DeleteRootCAResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{7}
}

func (m *DeleteRootCAResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRootCAResponse.Unmarshal(m, b)
}
func (m *DeleteRootCAResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRootCAResponse.Marshal(b, m, deterministic)
}
func (m *DeleteRootCAResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRootCAResponse.Merge(m, src)
}
func (m *DeleteRootCAResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteRootCAResponse.Size(m)
}
func (m *DeleteRootCAResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRootCAResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRootCAResponse proto.InternalMessageInfo

type LockRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockRequest) Reset()         { *m = LockRequest{} }
func (m *LockRequest) String() string { return proto.CompactTextString(m) }
func (*LockRequest) ProtoMessage()    {}
func (*LockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{8}
}

func (m *LockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockRequest.Unmarshal(m, b)
}
func (m *LockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockRequest.Marshal(b, m, deterministic)
}
func (m *LockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockRequest.Merge(m, src)
}
func (m *LockRequest) XXX_Size() int {
	return xxx_messageInfo_LockRequest.Size(m)
}
func (m *LockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LockRequest proto.InternalMessageInfo

func (m *LockRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type LockResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockResponse) Reset()         { *m = LockResponse{} }
func (m *LockResponse) String() string { return proto.CompactTextString(m) }
func (*LockResponse) ProtoMessage()    {}
func (*LockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{9}
}

func (m *LockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockResponse.Unmarshal(m, b)
}
func (m *LockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockResponse.Marshal(b, m, deterministic)
}
func (m *LockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockResponse.Merge(m, src)
}
func (m *LockResponse) XXX_Size() int {
	return xxx_messageInfo_LockResponse.Size(m)
}
func (m *LockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LockResponse proto.InternalMessageInfo

type LockMultiRequest struct {
	DeviceIDs            []uint32 `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockMultiRequest) Reset()         { *m = LockMultiRequest{} }
func (m *LockMultiRequest) String() string { return proto.CompactTextString(m) }
func (*LockMultiRequest) ProtoMessage()    {}
func (*LockMultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{10}
}

func (m *LockMultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockMultiRequest.Unmarshal(m, b)
}
func (m *LockMultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockMultiRequest.Marshal(b, m, deterministic)
}
func (m *LockMultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockMultiRequest.Merge(m, src)
}
func (m *LockMultiRequest) XXX_Size() int {
	return xxx_messageInfo_LockMultiRequest.Size(m)
}
func (m *LockMultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LockMultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LockMultiRequest proto.InternalMessageInfo

func (m *LockMultiRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

type LockMultiResponse struct {
	DeviceErrors         []*err.ErrorResponse `protobuf:"bytes,1,rep,name=deviceErrors,proto3" json:"deviceErrors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LockMultiResponse) Reset()         { *m = LockMultiResponse{} }
func (m *LockMultiResponse) String() string { return proto.CompactTextString(m) }
func (*LockMultiResponse) ProtoMessage()    {}
func (*LockMultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{11}
}

func (m *LockMultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockMultiResponse.Unmarshal(m, b)
}
func (m *LockMultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockMultiResponse.Marshal(b, m, deterministic)
}
func (m *LockMultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockMultiResponse.Merge(m, src)
}
func (m *LockMultiResponse) XXX_Size() int {
	return xxx_messageInfo_LockMultiResponse.Size(m)
}
func (m *LockMultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LockMultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LockMultiResponse proto.InternalMessageInfo

func (m *LockMultiResponse) GetDeviceErrors() []*err.ErrorResponse {
	if m != nil {
		return m.DeviceErrors
	}
	return nil
}

type UnlockRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlockRequest) Reset()         { *m = UnlockRequest{} }
func (m *UnlockRequest) String() string { return proto.CompactTextString(m) }
func (*UnlockRequest) ProtoMessage()    {}
func (*UnlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{12}
}

func (m *UnlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockRequest.Unmarshal(m, b)
}
func (m *UnlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockRequest.Marshal(b, m, deterministic)
}
func (m *UnlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockRequest.Merge(m, src)
}
func (m *UnlockRequest) XXX_Size() int {
	return xxx_messageInfo_UnlockRequest.Size(m)
}
func (m *UnlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockRequest proto.InternalMessageInfo

func (m *UnlockRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type UnlockResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlockResponse) Reset()         { *m = UnlockResponse{} }
func (m *UnlockResponse) String() string { return proto.CompactTextString(m) }
func (*UnlockResponse) ProtoMessage()    {}
func (*UnlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{13}
}

func (m *UnlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockResponse.Unmarshal(m, b)
}
func (m *UnlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockResponse.Marshal(b, m, deterministic)
}
func (m *UnlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockResponse.Merge(m, src)
}
func (m *UnlockResponse) XXX_Size() int {
	return xxx_messageInfo_UnlockResponse.Size(m)
}
func (m *UnlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockResponse proto.InternalMessageInfo

type UnlockMultiRequest struct {
	DeviceIDs            []uint32 `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlockMultiRequest) Reset()         { *m = UnlockMultiRequest{} }
func (m *UnlockMultiRequest) String() string { return proto.CompactTextString(m) }
func (*UnlockMultiRequest) ProtoMessage()    {}
func (*UnlockMultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{14}
}

func (m *UnlockMultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockMultiRequest.Unmarshal(m, b)
}
func (m *UnlockMultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockMultiRequest.Marshal(b, m, deterministic)
}
func (m *UnlockMultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockMultiRequest.Merge(m, src)
}
func (m *UnlockMultiRequest) XXX_Size() int {
	return xxx_messageInfo_UnlockMultiRequest.Size(m)
}
func (m *UnlockMultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockMultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockMultiRequest proto.InternalMessageInfo

func (m *UnlockMultiRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

type UnlockMultiResponse struct {
	DeviceErrors         []*err.ErrorResponse `protobuf:"bytes,1,rep,name=deviceErrors,proto3" json:"deviceErrors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UnlockMultiResponse) Reset()         { *m = UnlockMultiResponse{} }
func (m *UnlockMultiResponse) String() string { return proto.CompactTextString(m) }
func (*UnlockMultiResponse) ProtoMessage()    {}
func (*UnlockMultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{15}
}

func (m *UnlockMultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockMultiResponse.Unmarshal(m, b)
}
func (m *UnlockMultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockMultiResponse.Marshal(b, m, deterministic)
}
func (m *UnlockMultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockMultiResponse.Merge(m, src)
}
func (m *UnlockMultiResponse) XXX_Size() int {
	return xxx_messageInfo_UnlockMultiResponse.Size(m)
}
func (m *UnlockMultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockMultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockMultiResponse proto.InternalMessageInfo

func (m *UnlockMultiResponse) GetDeviceErrors() []*err.ErrorResponse {
	if m != nil {
		return m.DeviceErrors
	}
	return nil
}

type RebootRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RebootRequest) Reset()         { *m = RebootRequest{} }
func (m *RebootRequest) String() string { return proto.CompactTextString(m) }
func (*RebootRequest) ProtoMessage()    {}
func (*RebootRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{16}
}

func (m *RebootRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RebootRequest.Unmarshal(m, b)
}
func (m *RebootRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RebootRequest.Marshal(b, m, deterministic)
}
func (m *RebootRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RebootRequest.Merge(m, src)
}
func (m *RebootRequest) XXX_Size() int {
	return xxx_messageInfo_RebootRequest.Size(m)
}
func (m *RebootRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RebootRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RebootRequest proto.InternalMessageInfo

func (m *RebootRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type RebootResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RebootResponse) Reset()         { *m = RebootResponse{} }
func (m *RebootResponse) String() string { return proto.CompactTextString(m) }
func (*RebootResponse) ProtoMessage()    {}
func (*RebootResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{17}
}

func (m *RebootResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RebootResponse.Unmarshal(m, b)
}
func (m *RebootResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RebootResponse.Marshal(b, m, deterministic)
}
func (m *RebootResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RebootResponse.Merge(m, src)
}
func (m *RebootResponse) XXX_Size() int {
	return xxx_messageInfo_RebootResponse.Size(m)
}
func (m *RebootResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RebootResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RebootResponse proto.InternalMessageInfo

type RebootMultiRequest struct {
	DeviceIDs            []uint32 `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RebootMultiRequest) Reset()         { *m = RebootMultiRequest{} }
func (m *RebootMultiRequest) String() string { return proto.CompactTextString(m) }
func (*RebootMultiRequest) ProtoMessage()    {}
func (*RebootMultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{18}
}

func (m *RebootMultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RebootMultiRequest.Unmarshal(m, b)
}
func (m *RebootMultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RebootMultiRequest.Marshal(b, m, deterministic)
}
func (m *RebootMultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RebootMultiRequest.Merge(m, src)
}
func (m *RebootMultiRequest) XXX_Size() int {
	return xxx_messageInfo_RebootMultiRequest.Size(m)
}
func (m *RebootMultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RebootMultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RebootMultiRequest proto.InternalMessageInfo

func (m *RebootMultiRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

type RebootMultiResponse struct {
	DeviceErrors         []*err.ErrorResponse `protobuf:"bytes,1,rep,name=deviceErrors,proto3" json:"deviceErrors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RebootMultiResponse) Reset()         { *m = RebootMultiResponse{} }
func (m *RebootMultiResponse) String() string { return proto.CompactTextString(m) }
func (*RebootMultiResponse) ProtoMessage()    {}
func (*RebootMultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{19}
}

func (m *RebootMultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RebootMultiResponse.Unmarshal(m, b)
}
func (m *RebootMultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RebootMultiResponse.Marshal(b, m, deterministic)
}
func (m *RebootMultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RebootMultiResponse.Merge(m, src)
}
func (m *RebootMultiResponse) XXX_Size() int {
	return xxx_messageInfo_RebootMultiResponse.Size(m)
}
func (m *RebootMultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RebootMultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RebootMultiResponse proto.InternalMessageInfo

func (m *RebootMultiResponse) GetDeviceErrors() []*err.ErrorResponse {
	if m != nil {
		return m.DeviceErrors
	}
	return nil
}

type FactoryResetRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FactoryResetRequest) Reset()         { *m = FactoryResetRequest{} }
func (m *FactoryResetRequest) String() string { return proto.CompactTextString(m) }
func (*FactoryResetRequest) ProtoMessage()    {}
func (*FactoryResetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{20}
}

func (m *FactoryResetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FactoryResetRequest.Unmarshal(m, b)
}
func (m *FactoryResetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FactoryResetRequest.Marshal(b, m, deterministic)
}
func (m *FactoryResetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FactoryResetRequest.Merge(m, src)
}
func (m *FactoryResetRequest) XXX_Size() int {
	return xxx_messageInfo_FactoryResetRequest.Size(m)
}
func (m *FactoryResetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FactoryResetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FactoryResetRequest proto.InternalMessageInfo

func (m *FactoryResetRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type FactoryResetResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FactoryResetResponse) Reset()         { *m = FactoryResetResponse{} }
func (m *FactoryResetResponse) String() string { return proto.CompactTextString(m) }
func (*FactoryResetResponse) ProtoMessage()    {}
func (*FactoryResetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{21}
}

func (m *FactoryResetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FactoryResetResponse.Unmarshal(m, b)
}
func (m *FactoryResetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FactoryResetResponse.Marshal(b, m, deterministic)
}
func (m *FactoryResetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FactoryResetResponse.Merge(m, src)
}
func (m *FactoryResetResponse) XXX_Size() int {
	return xxx_messageInfo_FactoryResetResponse.Size(m)
}
func (m *FactoryResetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FactoryResetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FactoryResetResponse proto.InternalMessageInfo

type FactoryResetMultiRequest struct {
	DeviceIDs            []uint32 `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FactoryResetMultiRequest) Reset()         { *m = FactoryResetMultiRequest{} }
func (m *FactoryResetMultiRequest) String() string { return proto.CompactTextString(m) }
func (*FactoryResetMultiRequest) ProtoMessage()    {}
func (*FactoryResetMultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{22}
}

func (m *FactoryResetMultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FactoryResetMultiRequest.Unmarshal(m, b)
}
func (m *FactoryResetMultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FactoryResetMultiRequest.Marshal(b, m, deterministic)
}
func (m *FactoryResetMultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FactoryResetMultiRequest.Merge(m, src)
}
func (m *FactoryResetMultiRequest) XXX_Size() int {
	return xxx_messageInfo_FactoryResetMultiRequest.Size(m)
}
func (m *FactoryResetMultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FactoryResetMultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FactoryResetMultiRequest proto.InternalMessageInfo

func (m *FactoryResetMultiRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

type FactoryResetMultiResponse struct {
	DeviceErrors         []*err.ErrorResponse `protobuf:"bytes,1,rep,name=deviceErrors,proto3" json:"deviceErrors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FactoryResetMultiResponse) Reset()         { *m = FactoryResetMultiResponse{} }
func (m *FactoryResetMultiResponse) String() string { return proto.CompactTextString(m) }
func (*FactoryResetMultiResponse) ProtoMessage()    {}
func (*FactoryResetMultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{23}
}

func (m *FactoryResetMultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FactoryResetMultiResponse.Unmarshal(m, b)
}
func (m *FactoryResetMultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FactoryResetMultiResponse.Marshal(b, m, deterministic)
}
func (m *FactoryResetMultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FactoryResetMultiResponse.Merge(m, src)
}
func (m *FactoryResetMultiResponse) XXX_Size() int {
	return xxx_messageInfo_FactoryResetMultiResponse.Size(m)
}
func (m *FactoryResetMultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FactoryResetMultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FactoryResetMultiResponse proto.InternalMessageInfo

func (m *FactoryResetMultiResponse) GetDeviceErrors() []*err.ErrorResponse {
	if m != nil {
		return m.DeviceErrors
	}
	return nil
}

type ClearDBRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearDBRequest) Reset()         { *m = ClearDBRequest{} }
func (m *ClearDBRequest) String() string { return proto.CompactTextString(m) }
func (*ClearDBRequest) ProtoMessage()    {}
func (*ClearDBRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{24}
}

func (m *ClearDBRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearDBRequest.Unmarshal(m, b)
}
func (m *ClearDBRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearDBRequest.Marshal(b, m, deterministic)
}
func (m *ClearDBRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearDBRequest.Merge(m, src)
}
func (m *ClearDBRequest) XXX_Size() int {
	return xxx_messageInfo_ClearDBRequest.Size(m)
}
func (m *ClearDBRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearDBRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClearDBRequest proto.InternalMessageInfo

func (m *ClearDBRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type ClearDBResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearDBResponse) Reset()         { *m = ClearDBResponse{} }
func (m *ClearDBResponse) String() string { return proto.CompactTextString(m) }
func (*ClearDBResponse) ProtoMessage()    {}
func (*ClearDBResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{25}
}

func (m *ClearDBResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearDBResponse.Unmarshal(m, b)
}
func (m *ClearDBResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearDBResponse.Marshal(b, m, deterministic)
}
func (m *ClearDBResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearDBResponse.Merge(m, src)
}
func (m *ClearDBResponse) XXX_Size() int {
	return xxx_messageInfo_ClearDBResponse.Size(m)
}
func (m *ClearDBResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearDBResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClearDBResponse proto.InternalMessageInfo

type ClearDBMultiRequest struct {
	DeviceIDs            []uint32 `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearDBMultiRequest) Reset()         { *m = ClearDBMultiRequest{} }
func (m *ClearDBMultiRequest) String() string { return proto.CompactTextString(m) }
func (*ClearDBMultiRequest) ProtoMessage()    {}
func (*ClearDBMultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{26}
}

func (m *ClearDBMultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearDBMultiRequest.Unmarshal(m, b)
}
func (m *ClearDBMultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearDBMultiRequest.Marshal(b, m, deterministic)
}
func (m *ClearDBMultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearDBMultiRequest.Merge(m, src)
}
func (m *ClearDBMultiRequest) XXX_Size() int {
	return xxx_messageInfo_ClearDBMultiRequest.Size(m)
}
func (m *ClearDBMultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearDBMultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClearDBMultiRequest proto.InternalMessageInfo

func (m *ClearDBMultiRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

type ClearDBMultiResponse struct {
	DeviceErrors         []*err.ErrorResponse `protobuf:"bytes,1,rep,name=deviceErrors,proto3" json:"deviceErrors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ClearDBMultiResponse) Reset()         { *m = ClearDBMultiResponse{} }
func (m *ClearDBMultiResponse) String() string { return proto.CompactTextString(m) }
func (*ClearDBMultiResponse) ProtoMessage()    {}
func (*ClearDBMultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{27}
}

func (m *ClearDBMultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearDBMultiResponse.Unmarshal(m, b)
}
func (m *ClearDBMultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearDBMultiResponse.Marshal(b, m, deterministic)
}
func (m *ClearDBMultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearDBMultiResponse.Merge(m, src)
}
func (m *ClearDBMultiResponse) XXX_Size() int {
	return xxx_messageInfo_ClearDBMultiResponse.Size(m)
}
func (m *ClearDBMultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearDBMultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClearDBMultiResponse proto.InternalMessageInfo

func (m *ClearDBMultiResponse) GetDeviceErrors() []*err.ErrorResponse {
	if m != nil {
		return m.DeviceErrors
	}
	return nil
}

type ResetConfigRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	WithNetwork          bool     `protobuf:"varint,2,opt,name=withNetwork,proto3" json:"withNetwork,omitempty"`
	WithDB               bool     `protobuf:"varint,3,opt,name=withDB,proto3" json:"withDB,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetConfigRequest) Reset()         { *m = ResetConfigRequest{} }
func (m *ResetConfigRequest) String() string { return proto.CompactTextString(m) }
func (*ResetConfigRequest) ProtoMessage()    {}
func (*ResetConfigRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{28}
}

func (m *ResetConfigRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetConfigRequest.Unmarshal(m, b)
}
func (m *ResetConfigRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetConfigRequest.Marshal(b, m, deterministic)
}
func (m *ResetConfigRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetConfigRequest.Merge(m, src)
}
func (m *ResetConfigRequest) XXX_Size() int {
	return xxx_messageInfo_ResetConfigRequest.Size(m)
}
func (m *ResetConfigRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetConfigRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetConfigRequest proto.InternalMessageInfo

func (m *ResetConfigRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *ResetConfigRequest) GetWithNetwork() bool {
	if m != nil {
		return m.WithNetwork
	}
	return false
}

func (m *ResetConfigRequest) GetWithDB() bool {
	if m != nil {
		return m.WithDB
	}
	return false
}

type ResetConfigResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetConfigResponse) Reset()         { *m = ResetConfigResponse{} }
func (m *ResetConfigResponse) String() string { return proto.CompactTextString(m) }
func (*ResetConfigResponse) ProtoMessage()    {}
func (*ResetConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{29}
}

func (m *ResetConfigResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetConfigResponse.Unmarshal(m, b)
}
func (m *ResetConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetConfigResponse.Marshal(b, m, deterministic)
}
func (m *ResetConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetConfigResponse.Merge(m, src)
}
func (m *ResetConfigResponse) XXX_Size() int {
	return xxx_messageInfo_ResetConfigResponse.Size(m)
}
func (m *ResetConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResetConfigResponse proto.InternalMessageInfo

type ResetConfigMultiRequest struct {
	DeviceIDs            []uint32 `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	WithNetwork          bool     `protobuf:"varint,2,opt,name=withNetwork,proto3" json:"withNetwork,omitempty"`
	WithDB               bool     `protobuf:"varint,3,opt,name=withDB,proto3" json:"withDB,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetConfigMultiRequest) Reset()         { *m = ResetConfigMultiRequest{} }
func (m *ResetConfigMultiRequest) String() string { return proto.CompactTextString(m) }
func (*ResetConfigMultiRequest) ProtoMessage()    {}
func (*ResetConfigMultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{30}
}

func (m *ResetConfigMultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetConfigMultiRequest.Unmarshal(m, b)
}
func (m *ResetConfigMultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetConfigMultiRequest.Marshal(b, m, deterministic)
}
func (m *ResetConfigMultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetConfigMultiRequest.Merge(m, src)
}
func (m *ResetConfigMultiRequest) XXX_Size() int {
	return xxx_messageInfo_ResetConfigMultiRequest.Size(m)
}
func (m *ResetConfigMultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetConfigMultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetConfigMultiRequest proto.InternalMessageInfo

func (m *ResetConfigMultiRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

func (m *ResetConfigMultiRequest) GetWithNetwork() bool {
	if m != nil {
		return m.WithNetwork
	}
	return false
}

func (m *ResetConfigMultiRequest) GetWithDB() bool {
	if m != nil {
		return m.WithDB
	}
	return false
}

type ResetConfigMultiResponse struct {
	DeviceErrors         []*err.ErrorResponse `protobuf:"bytes,1,rep,name=deviceErrors,proto3" json:"deviceErrors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ResetConfigMultiResponse) Reset()         { *m = ResetConfigMultiResponse{} }
func (m *ResetConfigMultiResponse) String() string { return proto.CompactTextString(m) }
func (*ResetConfigMultiResponse) ProtoMessage()    {}
func (*ResetConfigMultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{31}
}

func (m *ResetConfigMultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetConfigMultiResponse.Unmarshal(m, b)
}
func (m *ResetConfigMultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetConfigMultiResponse.Marshal(b, m, deterministic)
}
func (m *ResetConfigMultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetConfigMultiResponse.Merge(m, src)
}
func (m *ResetConfigMultiResponse) XXX_Size() int {
	return xxx_messageInfo_ResetConfigMultiResponse.Size(m)
}
func (m *ResetConfigMultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetConfigMultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResetConfigMultiResponse proto.InternalMessageInfo

func (m *ResetConfigMultiResponse) GetDeviceErrors() []*err.ErrorResponse {
	if m != nil {
		return m.DeviceErrors
	}
	return nil
}

type UpgradeFirmwareRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	FirmwareData         []byte   `protobuf:"bytes,2,opt,name=firmwareData,proto3" json:"firmwareData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpgradeFirmwareRequest) Reset()         { *m = UpgradeFirmwareRequest{} }
func (m *UpgradeFirmwareRequest) String() string { return proto.CompactTextString(m) }
func (*UpgradeFirmwareRequest) ProtoMessage()    {}
func (*UpgradeFirmwareRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{32}
}

func (m *UpgradeFirmwareRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeFirmwareRequest.Unmarshal(m, b)
}
func (m *UpgradeFirmwareRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeFirmwareRequest.Marshal(b, m, deterministic)
}
func (m *UpgradeFirmwareRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeFirmwareRequest.Merge(m, src)
}
func (m *UpgradeFirmwareRequest) XXX_Size() int {
	return xxx_messageInfo_UpgradeFirmwareRequest.Size(m)
}
func (m *UpgradeFirmwareRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeFirmwareRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeFirmwareRequest proto.InternalMessageInfo

func (m *UpgradeFirmwareRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *UpgradeFirmwareRequest) GetFirmwareData() []byte {
	if m != nil {
		return m.FirmwareData
	}
	return nil
}

type UpgradeFirmwareResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpgradeFirmwareResponse) Reset()         { *m = UpgradeFirmwareResponse{} }
func (m *UpgradeFirmwareResponse) String() string { return proto.CompactTextString(m) }
func (*UpgradeFirmwareResponse) ProtoMessage()    {}
func (*UpgradeFirmwareResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{33}
}

func (m *UpgradeFirmwareResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeFirmwareResponse.Unmarshal(m, b)
}
func (m *UpgradeFirmwareResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeFirmwareResponse.Marshal(b, m, deterministic)
}
func (m *UpgradeFirmwareResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeFirmwareResponse.Merge(m, src)
}
func (m *UpgradeFirmwareResponse) XXX_Size() int {
	return xxx_messageInfo_UpgradeFirmwareResponse.Size(m)
}
func (m *UpgradeFirmwareResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeFirmwareResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeFirmwareResponse proto.InternalMessageInfo

type UpgradeFirmwareMultiRequest struct {
	DeviceIDs            []uint32 `protobuf:"varint,1,rep,packed,name=deviceIDs,proto3" json:"deviceIDs,omitempty"`
	FirmwareData         []byte   `protobuf:"bytes,2,opt,name=firmwareData,proto3" json:"firmwareData,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpgradeFirmwareMultiRequest) Reset()         { *m = UpgradeFirmwareMultiRequest{} }
func (m *UpgradeFirmwareMultiRequest) String() string { return proto.CompactTextString(m) }
func (*UpgradeFirmwareMultiRequest) ProtoMessage()    {}
func (*UpgradeFirmwareMultiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{34}
}

func (m *UpgradeFirmwareMultiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeFirmwareMultiRequest.Unmarshal(m, b)
}
func (m *UpgradeFirmwareMultiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeFirmwareMultiRequest.Marshal(b, m, deterministic)
}
func (m *UpgradeFirmwareMultiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeFirmwareMultiRequest.Merge(m, src)
}
func (m *UpgradeFirmwareMultiRequest) XXX_Size() int {
	return xxx_messageInfo_UpgradeFirmwareMultiRequest.Size(m)
}
func (m *UpgradeFirmwareMultiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeFirmwareMultiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeFirmwareMultiRequest proto.InternalMessageInfo

func (m *UpgradeFirmwareMultiRequest) GetDeviceIDs() []uint32 {
	if m != nil {
		return m.DeviceIDs
	}
	return nil
}

func (m *UpgradeFirmwareMultiRequest) GetFirmwareData() []byte {
	if m != nil {
		return m.FirmwareData
	}
	return nil
}

type UpgradeFirmwareMultiResponse struct {
	DeviceErrors         []*err.ErrorResponse `protobuf:"bytes,1,rep,name=deviceErrors,proto3" json:"deviceErrors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpgradeFirmwareMultiResponse) Reset()         { *m = UpgradeFirmwareMultiResponse{} }
func (m *UpgradeFirmwareMultiResponse) String() string { return proto.CompactTextString(m) }
func (*UpgradeFirmwareMultiResponse) ProtoMessage()    {}
func (*UpgradeFirmwareMultiResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{35}
}

func (m *UpgradeFirmwareMultiResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpgradeFirmwareMultiResponse.Unmarshal(m, b)
}
func (m *UpgradeFirmwareMultiResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpgradeFirmwareMultiResponse.Marshal(b, m, deterministic)
}
func (m *UpgradeFirmwareMultiResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpgradeFirmwareMultiResponse.Merge(m, src)
}
func (m *UpgradeFirmwareMultiResponse) XXX_Size() int {
	return xxx_messageInfo_UpgradeFirmwareMultiResponse.Size(m)
}
func (m *UpgradeFirmwareMultiResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpgradeFirmwareMultiResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpgradeFirmwareMultiResponse proto.InternalMessageInfo

func (m *UpgradeFirmwareMultiResponse) GetDeviceErrors() []*err.ErrorResponse {
	if m != nil {
		return m.DeviceErrors
	}
	return nil
}

type GetHashKeyRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHashKeyRequest) Reset()         { *m = GetHashKeyRequest{} }
func (m *GetHashKeyRequest) String() string { return proto.CompactTextString(m) }
func (*GetHashKeyRequest) ProtoMessage()    {}
func (*GetHashKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{36}
}

func (m *GetHashKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHashKeyRequest.Unmarshal(m, b)
}
func (m *GetHashKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHashKeyRequest.Marshal(b, m, deterministic)
}
func (m *GetHashKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHashKeyRequest.Merge(m, src)
}
func (m *GetHashKeyRequest) XXX_Size() int {
	return xxx_messageInfo_GetHashKeyRequest.Size(m)
}
func (m *GetHashKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHashKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetHashKeyRequest proto.InternalMessageInfo

func (m *GetHashKeyRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

type GetHashKeyResponse struct {
	IsDefault            bool     `protobuf:"varint,1,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	Checksum             uint32   `protobuf:"varint,2,opt,name=checksum,proto3" json:"checksum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetHashKeyResponse) Reset()         { *m = GetHashKeyResponse{} }
func (m *GetHashKeyResponse) String() string { return proto.CompactTextString(m) }
func (*GetHashKeyResponse) ProtoMessage()    {}
func (*GetHashKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{37}
}

func (m *GetHashKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetHashKeyResponse.Unmarshal(m, b)
}
func (m *GetHashKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetHashKeyResponse.Marshal(b, m, deterministic)
}
func (m *GetHashKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetHashKeyResponse.Merge(m, src)
}
func (m *GetHashKeyResponse) XXX_Size() int {
	return xxx_messageInfo_GetHashKeyResponse.Size(m)
}
func (m *GetHashKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetHashKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetHashKeyResponse proto.InternalMessageInfo

func (m *GetHashKeyResponse) GetIsDefault() bool {
	if m != nil {
		return m.IsDefault
	}
	return false
}

func (m *GetHashKeyResponse) GetChecksum() uint32 {
	if m != nil {
		return m.Checksum
	}
	return 0
}

type SetHashKeyRequest struct {
	DeviceID             uint32   `protobuf:"varint,1,opt,name=deviceID,proto3" json:"deviceID,omitempty"`
	SetDefault           bool     `protobuf:"varint,2,opt,name=setDefault,proto3" json:"setDefault,omitempty"`
	HashKey              []byte   `protobuf:"bytes,3,opt,name=hashKey,proto3" json:"hashKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetHashKeyRequest) Reset()         { *m = SetHashKeyRequest{} }
func (m *SetHashKeyRequest) String() string { return proto.CompactTextString(m) }
func (*SetHashKeyRequest) ProtoMessage()    {}
func (*SetHashKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{38}
}

func (m *SetHashKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetHashKeyRequest.Unmarshal(m, b)
}
func (m *SetHashKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetHashKeyRequest.Marshal(b, m, deterministic)
}
func (m *SetHashKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetHashKeyRequest.Merge(m, src)
}
func (m *SetHashKeyRequest) XXX_Size() int {
	return xxx_messageInfo_SetHashKeyRequest.Size(m)
}
func (m *SetHashKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetHashKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetHashKeyRequest proto.InternalMessageInfo

func (m *SetHashKeyRequest) GetDeviceID() uint32 {
	if m != nil {
		return m.DeviceID
	}
	return 0
}

func (m *SetHashKeyRequest) GetSetDefault() bool {
	if m != nil {
		return m.SetDefault
	}
	return false
}

func (m *SetHashKeyRequest) GetHashKey() []byte {
	if m != nil {
		return m.HashKey
	}
	return nil
}

type SetHashKeyResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetHashKeyResponse) Reset()         { *m = SetHashKeyResponse{} }
func (m *SetHashKeyResponse) String() string { return proto.CompactTextString(m) }
func (*SetHashKeyResponse) ProtoMessage()    {}
func (*SetHashKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_870276a56ac00da5, []int{39}
}

func (m *SetHashKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetHashKeyResponse.Unmarshal(m, b)
}
func (m *SetHashKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetHashKeyResponse.Marshal(b, m, deterministic)
}
func (m *SetHashKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetHashKeyResponse.Merge(m, src)
}
func (m *SetHashKeyResponse) XXX_Size() int {
	return xxx_messageInfo_SetHashKeyResponse.Size(m)
}
func (m *SetHashKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetHashKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetHashKeyResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("device.Type", Type_name, Type_value)
	proto.RegisterEnum("device.SwitchType", SwitchType_name, SwitchType_value)
	proto.RegisterEnum("device.LEDColor", LEDColor_name, LEDColor_value)
	proto.RegisterEnum("device.BuzzerTone", BuzzerTone_name, BuzzerTone_value)
	proto.RegisterType((*GetInfoRequest)(nil), "device.GetInfoRequest")
	proto.RegisterType((*FactoryInfo)(nil), "device.FactoryInfo")
	proto.RegisterType((*GetInfoResponse)(nil), "device.GetInfoResponse")
	proto.RegisterType((*GetCapabilityInfoRequest)(nil), "device.GetCapabilityInfoRequest")
	proto.RegisterType((*CapabilityInfo)(nil), "device.CapabilityInfo")
	proto.RegisterType((*GetCapabilityInfoResponse)(nil), "device.GetCapabilityInfoResponse")
	proto.RegisterType((*DeleteRootCARequest)(nil), "device.DeleteRootCARequest")
	proto.RegisterType((*DeleteRootCAResponse)(nil), "device.DeleteRootCAResponse")
	proto.RegisterType((*LockRequest)(nil), "device.LockRequest")
	proto.RegisterType((*LockResponse)(nil), "device.LockResponse")
	proto.RegisterType((*LockMultiRequest)(nil), "device.LockMultiRequest")
	proto.RegisterType((*LockMultiResponse)(nil), "device.LockMultiResponse")
	proto.RegisterType((*UnlockRequest)(nil), "device.UnlockRequest")
	proto.RegisterType((*UnlockResponse)(nil), "device.UnlockResponse")
	proto.RegisterType((*UnlockMultiRequest)(nil), "device.UnlockMultiRequest")
	proto.RegisterType((*UnlockMultiResponse)(nil), "device.UnlockMultiResponse")
	proto.RegisterType((*RebootRequest)(nil), "device.RebootRequest")
	proto.RegisterType((*RebootResponse)(nil), "device.RebootResponse")
	proto.RegisterType((*RebootMultiRequest)(nil), "device.RebootMultiRequest")
	proto.RegisterType((*RebootMultiResponse)(nil), "device.RebootMultiResponse")
	proto.RegisterType((*FactoryResetRequest)(nil), "device.FactoryResetRequest")
	proto.RegisterType((*FactoryResetResponse)(nil), "device.FactoryResetResponse")
	proto.RegisterType((*FactoryResetMultiRequest)(nil), "device.FactoryResetMultiRequest")
	proto.RegisterType((*FactoryResetMultiResponse)(nil), "device.FactoryResetMultiResponse")
	proto.RegisterType((*ClearDBRequest)(nil), "device.ClearDBRequest")
	proto.RegisterType((*ClearDBResponse)(nil), "device.ClearDBResponse")
	proto.RegisterType((*ClearDBMultiRequest)(nil), "device.ClearDBMultiRequest")
	proto.RegisterType((*ClearDBMultiResponse)(nil), "device.ClearDBMultiResponse")
	proto.RegisterType((*ResetConfigRequest)(nil), "device.ResetConfigRequest")
	proto.RegisterType((*ResetConfigResponse)(nil), "device.ResetConfigResponse")
	proto.RegisterType((*ResetConfigMultiRequest)(nil), "device.ResetConfigMultiRequest")
	proto.RegisterType((*ResetConfigMultiResponse)(nil), "device.ResetConfigMultiResponse")
	proto.RegisterType((*UpgradeFirmwareRequest)(nil), "device.UpgradeFirmwareRequest")
	proto.RegisterType((*UpgradeFirmwareResponse)(nil), "device.UpgradeFirmwareResponse")
	proto.RegisterType((*UpgradeFirmwareMultiRequest)(nil), "device.UpgradeFirmwareMultiRequest")
	proto.RegisterType((*UpgradeFirmwareMultiResponse)(nil), "device.UpgradeFirmwareMultiResponse")
	proto.RegisterType((*GetHashKeyRequest)(nil), "device.GetHashKeyRequest")
	proto.RegisterType((*GetHashKeyResponse)(nil), "device.GetHashKeyResponse")
	proto.RegisterType((*SetHashKeyRequest)(nil), "device.SetHashKeyRequest")
	proto.RegisterType((*SetHashKeyResponse)(nil), "device.SetHashKeyResponse")
}

func init() { proto.RegisterFile("device.proto", fileDescriptor_870276a56ac00da5) }

var fileDescriptor_870276a56ac00da5 = []byte{
	// 1879 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x58, 0xd1, 0x52, 0xdb, 0x48,
	0x16, 0x1d, 0x07, 0x30, 0x70, 0x6d, 0x43, 0xd3, 0x80, 0x31, 0x0e, 0x9b, 0x30, 0xde, 0xa9, 0x5a,
	0x86, 0x49, 0x11, 0x50, 0x32, 0xd9, 0x54, 0x6a, 0x1f, 0xd6, 0xb6, 0x64, 0xa2, 0x42, 0x96, 0x3c,
	0x92, 0x4d, 0x42, 0x5e, 0x54, 0xc2, 0x6e, 0x40, 0x83, 0x6d, 0x79, 0x24, 0x79, 0x09, 0xf3, 0xb4,
	0x7f, 0xb4, 0x55, 0xfb, 0x3d, 0x5b, 0xb5, 0x3f, 0xb0, 0xff, 0xb0, 0x53, 0x2d, 0xb5, 0xdc, 0x92,
	0x2d, 0x52, 0xa6, 0x78, 0x8b, 0xce, 0x3d, 0xe7, 0xf6, 0xbd, 0x57, 0x37, 0xed, 0x83, 0x20, 0xdf,
	0x23, 0xff, 0xb0, 0xbb, 0xe4, 0x68, 0xe4, 0x3a, 0xbe, 0x83, 0xb3, 0xe1, 0x53, 0x79, 0x95, 0xb8,
	0x6e, 0x08, 0x55, 0x5e, 0xc1, 0xda, 0x29, 0xf1, 0xe5, 0xe1, 0x95, 0xa3, 0x93, 0xdf, 0xc6, 0xc4,
	0xf3, 0x71, 0x19, 0x56, 0x42, 0x9a, 0x2c, 0x96, 0x32, 0xfb, 0x99, 0x83, 0x82, 0x3e, 0x79, 0xae,
	0xfc, 0x37, 0x03, 0xb9, 0x86, 0xd5, 0xf5, 0x1d, 0xf7, 0x9e, 0x4a, 0x70, 0x09, 0x96, 0x9b, 0xd5,
	0x7a, 0xb5, 0xd7, 0x73, 0x4b, 0xcf, 0xf6, 0x33, 0x07, 0xab, 0x7a, 0xf4, 0x88, 0xf7, 0x60, 0x75,
	0xe0, 0xf4, 0x48, 0x5f, 0xb5, 0x06, 0xa4, 0xb4, 0x10, 0xc4, 0x38, 0x80, 0x0f, 0x60, 0xfd, 0xca,
	0x76, 0x07, 0x77, 0x96, 0x4b, 0xce, 0x89, 0xeb, 0xd9, 0xce, 0xb0, 0xb4, 0x18, 0x70, 0xa6, 0x61,
	0xfc, 0x03, 0x14, 0x6e, 0x89, 0x3b, 0x24, 0xfd, 0x88, 0xb7, 0x14, 0xf0, 0x92, 0x20, 0x65, 0xd5,
	0x8c, 0xba, 0xc3, 0xb3, 0x65, 0x43, 0x56, 0x02, 0xc4, 0x15, 0xc8, 0x5f, 0x3a, 0x96, 0xdb, 0x8b,
	0x48, 0xcb, 0x01, 0x29, 0x81, 0x55, 0x3e, 0xc0, 0xfa, 0x64, 0x1e, 0xde, 0xc8, 0x19, 0x7a, 0x04,
	0xff, 0x05, 0x16, 0xed, 0xe1, 0x95, 0x13, 0x0c, 0x23, 0x27, 0x6c, 0x1e, 0xb1, 0x91, 0xc6, 0xe6,
	0xa0, 0x07, 0x84, 0xca, 0x3b, 0x28, 0x9d, 0x12, 0xbf, 0x6e, 0x8d, 0xac, 0x4b, 0xbb, 0x6f, 0xfb,
	0xf7, 0xf3, 0x4e, 0xf5, 0xdf, 0x2b, 0xb0, 0x96, 0x54, 0xe1, 0x7d, 0x58, 0xf4, 0xef, 0x47, 0x24,
	0xa0, 0xae, 0x09, 0xf9, 0xe8, 0xcc, 0xf6, 0xfd, 0x88, 0xe8, 0x41, 0x84, 0x36, 0x33, 0xb0, 0xbe,
	0xaa, 0xe3, 0x81, 0x76, 0xd5, 0xf1, 0x48, 0x38, 0xff, 0x82, 0x9e, 0xc0, 0x28, 0xa7, 0x25, 0xab,
	0xc6, 0x78, 0x34, 0x72, 0x5c, 0x9f, 0xf4, 0x82, 0xf7, 0xb0, 0xa2, 0x27, 0x30, 0x3a, 0xba, 0xae,
	0xe5, 0xf6, 0x38, 0x69, 0x31, 0x20, 0x25, 0x41, 0xfa, 0xc2, 0x28, 0x70, 0xf2, 0x95, 0xf3, 0x96,
	0x02, 0xde, 0x34, 0x4c, 0xf3, 0x19, 0x92, 0x66, 0x70, 0x5e, 0x36, 0xcc, 0x97, 0x00, 0xc3, 0x05,
	0x18, 0x5e, 0x13, 0x97, 0xf3, 0x96, 0xc3, 0x7c, 0x53, 0x30, 0xcd, 0x77, 0x65, 0x75, 0x09, 0xe7,
	0xad, 0x84, 0xf9, 0x12, 0x20, 0x7e, 0x05, 0x1b, 0x63, 0x8f, 0xb8, 0x74, 0xb9, 0x38, 0x13, 0x02,
	0xe6, 0x6c, 0x00, 0x1f, 0x01, 0xa6, 0x60, 0xeb, 0xc6, 0xf1, 0x1d, 0x4e, 0xcf, 0x05, 0xf4, 0x94,
	0x08, 0x3e, 0x86, 0xcd, 0x10, 0x75, 0x2d, 0x2f, 0x96, 0x3f, 0x1f, 0x08, 0xd2, 0x42, 0xf8, 0x3d,
	0xec, 0x58, 0xfd, 0xd1, 0x8d, 0x35, 0x1c, 0x0f, 0x88, 0x6b, 0x77, 0x65, 0x91, 0xab, 0x0a, 0x81,
	0xea, 0xa1, 0x30, 0xed, 0xf7, 0x93, 0x52, 0x8d, 0xbd, 0xb4, 0xad, 0xb0, 0xdf, 0x04, 0x48, 0xfb,
	0xb5, 0x07, 0xd6, 0x35, 0x51, 0x9c, 0x6b, 0xce, 0xdc, 0x0e, 0xfb, 0x9d, 0x09, 0xd0, 0x9c, 0xe7,
	0x9a, 0xdc, 0xe2, 0xcc, 0x62, 0x98, 0x33, 0x01, 0xd2, 0x6d, 0x69, 0xab, 0x55, 0x4e, 0x7a, 0x11,
	0x6e, 0x4b, 0x1c, 0xc3, 0x87, 0x80, 0x7e, 0x75, 0x2e, 0xeb, 0x4e, 0x2f, 0x36, 0x86, 0x97, 0x01,
	0x6f, 0x06, 0xa7, 0xdc, 0x3b, 0x9b, 0x5c, 0x5b, 0xc3, 0xd8, 0x72, 0x1d, 0x84, 0xdc, 0x69, 0x1c,
	0xbf, 0x85, 0x6d, 0x86, 0x35, 0xc7, 0x7d, 0xdf, 0xe6, 0x82, 0x1f, 0x03, 0x41, 0x7a, 0x10, 0xbf,
	0x83, 0xa2, 0xef, 0xda, 0xd7, 0xd7, 0xc4, 0xad, 0x76, 0x7d, 0xdb, 0x19, 0x72, 0xd9, 0x61, 0x20,
	0x7b, 0x20, 0x4a, 0x3b, 0x15, 0x8d, 0x36, 0x67, 0xff, 0x14, 0x76, 0x1a, 0xc7, 0x02, 0x8e, 0x1a,
	0x5b, 0xe3, 0x57, 0x8c, 0x13, 0xc3, 0x68, 0x87, 0x9a, 0x21, 0xb6, 0xce, 0xc8, 0x3d, 0xe7, 0x09,
	0x61, 0x87, 0xd3, 0x38, 0x7d, 0x63, 0xba, 0xf1, 0xf6, 0xfd, 0xcf, 0xd2, 0x57, 0x9f, 0x93, 0xdf,
	0x84, 0x6f, 0x6c, 0x26, 0x80, 0xf7, 0x21, 0xf7, 0x8b, 0xce, 0x79, 0x7f, 0x0b, 0x78, 0x71, 0xa8,
	0xd2, 0x84, 0xdd, 0x94, 0xcb, 0x86, 0x5d, 0x59, 0xc7, 0xb0, 0xdc, 0xb5, 0x46, 0x32, 0xbf, 0xb5,
	0x8a, 0xd1, 0x0d, 0x32, 0x25, 0x88, 0x68, 0x95, 0x13, 0xd8, 0x14, 0x49, 0x9f, 0xf8, 0x44, 0x77,
	0x1c, 0xbf, 0x5e, 0x9d, 0xe7, 0xda, 0x2a, 0xc2, 0x56, 0x52, 0x12, 0x1e, 0x5e, 0xf9, 0x11, 0x72,
	0x8a, 0xd3, 0xbd, 0x9d, 0x27, 0xc5, 0x1a, 0xe4, 0x43, 0x2a, 0x93, 0x1e, 0x03, 0xa2, 0xcf, 0xc1,
	0x6b, 0x8e, 0xf4, 0x7b, 0xb0, 0x1a, 0xf1, 0xbd, 0x52, 0x66, 0x7f, 0xe1, 0xa0, 0xa0, 0x73, 0xa0,
	0x72, 0x06, 0x1b, 0x31, 0x05, 0x6b, 0xff, 0x5d, 0xf4, 0xbb, 0x27, 0xb9, 0xae, 0xe3, 0x86, 0xaa,
	0x9c, 0x80, 0x8f, 0xe8, 0xcf, 0x5e, 0x00, 0x45, 0x4c, 0x3d, 0xc1, 0xab, 0xfc, 0x04, 0x85, 0xce,
	0xb0, 0x3f, 0x67, 0xed, 0x08, 0xd6, 0x22, 0x32, 0xab, 0x5e, 0x00, 0x1c, 0x22, 0x8f, 0xa8, 0xbf,
	0x09, 0x9b, 0x09, 0xcd, 0xd3, 0x3b, 0xd0, 0xc9, 0xa5, 0xe3, 0xf8, 0x73, 0x76, 0x10, 0x91, 0x79,
	0x07, 0x21, 0xf2, 0xb8, 0x0e, 0x12, 0x9a, 0x27, 0x76, 0x70, 0x02, 0x9b, 0xec, 0x97, 0x55, 0x27,
	0x1e, 0xf1, 0xe7, 0x5c, 0xc4, 0xa4, 0x84, 0x75, 0xf3, 0x1e, 0x4a, 0x71, 0xfc, 0x11, 0x3d, 0x19,
	0xb0, 0x9b, 0xa2, 0x7c, 0x62, 0x67, 0xaf, 0x60, 0xad, 0xde, 0x27, 0x96, 0x2b, 0xd6, 0xe6, 0x69,
	0x6a, 0x03, 0xd6, 0x27, 0x6c, 0xd6, 0xcf, 0x1b, 0xd8, 0x64, 0xd0, 0x23, 0x5a, 0x51, 0x61, 0x2b,
	0x29, 0x7a, 0x62, 0x17, 0xbf, 0xd2, 0x15, 0xf1, 0x88, 0x5f, 0x77, 0x86, 0x57, 0xf6, 0xf5, 0x1c,
	0x9d, 0xd0, 0xbb, 0xec, 0xce, 0xf6, 0x6f, 0x54, 0xe2, 0xdf, 0x39, 0xee, 0x6d, 0x60, 0x54, 0x56,
	0xf4, 0x38, 0x84, 0x8b, 0x90, 0xa5, 0x8f, 0x62, 0x8d, 0x39, 0x14, 0xf6, 0x54, 0xd9, 0xa6, 0xab,
	0x15, 0x3b, 0x8b, 0xcd, 0xe1, 0x37, 0xd8, 0x89, 0xc1, 0xf3, 0xcf, 0xe2, 0x09, 0x95, 0xe8, 0x50,
	0x9a, 0x3d, 0xf2, 0x89, 0x93, 0xfc, 0x0c, 0xc5, 0xce, 0xe8, 0xda, 0xb5, 0x7a, 0xa4, 0xc1, 0x4c,
	0xef, 0x3c, 0xd3, 0xac, 0x40, 0x3e, 0xf2, 0xc8, 0xa2, 0xe5, 0x5b, 0x41, 0x13, 0x79, 0x3d, 0x81,
	0x55, 0x76, 0x61, 0x67, 0x26, 0x33, 0x9b, 0x9d, 0x09, 0xcf, 0xa7, 0x42, 0x8f, 0x98, 0xdf, 0x3c,
	0x67, 0x9f, 0xc3, 0x5e, 0xfa, 0x01, 0x4f, 0x9c, 0xd6, 0x6b, 0xd8, 0x38, 0x25, 0xfe, 0x47, 0xcb,
	0xbb, 0x39, 0x23, 0xf7, 0xf3, 0xfc, 0x07, 0x52, 0x01, 0xc7, 0x05, 0xec, 0xf8, 0x3d, 0x58, 0xb5,
	0x3d, 0x91, 0x5c, 0x59, 0xe3, 0xbe, 0x1f, 0x48, 0x56, 0x74, 0x0e, 0xd0, 0x7c, 0xdd, 0x1b, 0xd2,
	0xbd, 0xf5, 0xc6, 0x03, 0x66, 0xa8, 0x27, 0xcf, 0x15, 0x1b, 0x36, 0x8c, 0xc7, 0x14, 0x80, 0x5f,
	0x00, 0x78, 0xc4, 0x8f, 0xce, 0x0a, 0x97, 0x2d, 0x86, 0xd0, 0x3f, 0x9e, 0x6e, 0xc2, 0x6c, 0xc1,
	0xb2, 0xe5, 0xf5, 0xe8, 0xb1, 0xb2, 0x05, 0xd8, 0x98, 0x29, 0xfd, 0xf0, 0x3f, 0x8b, 0xb0, 0x48,
	0xff, 0x00, 0xc0, 0x05, 0x58, 0xed, 0xa8, 0xa2, 0xd4, 0x90, 0x55, 0x49, 0x44, 0xdf, 0xe1, 0x0d,
	0x28, 0xd4, 0x64, 0x4d, 0x52, 0xdb, 0xfa, 0x85, 0xd9, 0x52, 0x3a, 0x06, 0xca, 0xe0, 0x35, 0x80,
	0x09, 0xf4, 0x09, 0x3d, 0xc3, 0xeb, 0x90, 0xab, 0xc9, 0x9a, 0x22, 0xb7, 0x25, 0x53, 0x95, 0xda,
	0x68, 0x01, 0xaf, 0xc2, 0xd2, 0xe7, 0x56, 0xd5, 0x30, 0xd0, 0x22, 0xce, 0xc3, 0x4a, 0xf0, 0x4f,
	0xd3, 0x10, 0xd0, 0x12, 0xcd, 0x1d, 0xca, 0x9a, 0xd5, 0xcf, 0x68, 0x89, 0x0a, 0x0d, 0xa9, 0xde,
	0xd1, 0x25, 0x53, 0xd6, 0x4c, 0x01, 0x65, 0x31, 0x86, 0x35, 0x51, 0xd3, 0x74, 0xb3, 0xa9, 0x89,
	0x1d, 0x45, 0x32, 0x85, 0x63, 0xb4, 0x8c, 0x11, 0xe4, 0x6b, 0xb2, 0x66, 0xb4, 0xab, 0x6d, 0x59,
	0x53, 0x4d, 0x01, 0xad, 0xb0, 0x92, 0x22, 0xa4, 0x2a, 0xa0, 0x55, 0x0a, 0x35, 0xaa, 0x75, 0x89,
	0xb3, 0x80, 0x9e, 0x25, 0x6b, 0xa6, 0x28, 0x9d, 0xcb, 0x75, 0x09, 0xe5, 0xa6, 0x44, 0x8a, 0x80,
	0xf2, 0xac, 0x6e, 0xd6, 0x87, 0x80, 0x0a, 0x18, 0x41, 0x2e, 0x30, 0x4b, 0xa6, 0xa1, 0x54, 0xcf,
	0x25, 0xf4, 0xcf, 0x0c, 0x2d, 0xa8, 0xae, 0xe9, 0x93, 0xbc, 0x6f, 0x8f, 0xd1, 0x1a, 0xcd, 0xa4,
	0x75, 0xda, 0xad, 0x4e, 0x9b, 0x95, 0x89, 0xd6, 0x69, 0x8d, 0xb2, 0x1a, 0x43, 0x50, 0x22, 0x77,
	0x4b, 0x40, 0x1b, 0x6c, 0x68, 0xe1, 0x90, 0x04, 0x84, 0x31, 0x40, 0x36, 0x18, 0x8c, 0x80, 0x36,
	0x63, 0x43, 0x7a, 0x83, 0xb6, 0x12, 0x52, 0x5d, 0x40, 0xdb, 0x3c, 0x2c, 0x0a, 0xa8, 0x38, 0x33,
	0xa3, 0x13, 0xb4, 0x83, 0x37, 0x61, 0x3d, 0x62, 0x98, 0x67, 0xd2, 0x45, 0xab, 0x2a, 0xa2, 0x12,
	0x95, 0xd1, 0x99, 0xd0, 0x23, 0xd1, 0x2e, 0xad, 0x3a, 0x3c, 0x2f, 0x22, 0x94, 0xf1, 0x36, 0x6c,
	0xc4, 0x87, 0xd6, 0x10, 0xcc, 0x46, 0x0b, 0xfd, 0x89, 0x1e, 0x90, 0x84, 0xd1, 0x8b, 0x40, 0x3d,
	0x19, 0xae, 0xf9, 0x8b, 0x8e, 0x5e, 0xd2, 0x86, 0x38, 0x84, 0xf6, 0x69, 0x43, 0x72, 0xd3, 0x3c,
	0x11, 0x8e, 0xd1, 0xf7, 0x38, 0x0f, 0xcb, 0x1d, 0xf5, 0x4c, 0xd5, 0x3e, 0xa9, 0xe8, 0xff, 0x99,
	0xf2, 0x33, 0x94, 0x39, 0x7c, 0x0b, 0x60, 0xdc, 0xd9, 0x7e, 0xf7, 0x26, 0xd8, 0xb1, 0x0d, 0x28,
	0xa8, 0x9a, 0xde, 0xac, 0x2a, 0xca, 0x85, 0xa9, 0xb5, 0x24, 0x15, 0x7d, 0x47, 0x5b, 0x98, 0x40,
	0x75, 0x45, 0x33, 0x24, 0x11, 0x65, 0x0e, 0xff, 0x95, 0x81, 0x15, 0x45, 0x12, 0xeb, 0x4e, 0xdf,
	0x71, 0xa9, 0x48, 0x91, 0x44, 0xb3, 0xae, 0x29, 0x9a, 0x6e, 0x6a, 0x8d, 0x46, 0xb8, 0x9c, 0x1c,
	0xd2, 0xa9, 0x04, 0x6f, 0x01, 0xe2, 0xd0, 0x85, 0xa4, 0x28, 0x1a, 0x5d, 0xd1, 0x4d, 0x58, 0xe7,
	0xe8, 0xa9, 0x2e, 0x49, 0x2a, 0x5a, 0xa0, 0x8d, 0x72, 0xb0, 0x7e, 0x51, 0x55, 0xd1, 0x62, 0x12,
	0xab, 0x29, 0x1d, 0x09, 0x2d, 0xd1, 0x39, 0x71, 0xac, 0x59, 0x3d, 0x95, 0xd4, 0x76, 0x15, 0x65,
	0x93, 0x39, 0x3f, 0x7d, 0xa4, 0x63, 0x5e, 0x3e, 0xec, 0x01, 0xd4, 0xc6, 0xbf, 0xff, 0x4e, 0xdc,
	0xb6, 0x33, 0x24, 0x94, 0x52, 0xeb, 0x7c, 0xf9, 0x22, 0xe9, 0x66, 0x5b, 0x53, 0x25, 0x56, 0xf4,
	0x14, 0x48, 0x0b, 0xcc, 0xe0, 0x22, 0xe0, 0x38, 0xd8, 0x94, 0x45, 0x51, 0x91, 0xd0, 0x33, 0xda,
	0x4e, 0x1c, 0xff, 0x28, 0x9f, 0x7e, 0x44, 0x0b, 0xc2, 0xff, 0x00, 0xb2, 0x62, 0x70, 0x13, 0xe0,
	0x0f, 0xb0, 0xcc, 0x3e, 0x29, 0xe0, 0x89, 0x0d, 0x4f, 0x7e, 0x73, 0x29, 0xef, 0xcc, 0xe0, 0xec,
	0xba, 0xfa, 0x1c, 0xdc, 0x7a, 0xd3, 0x1f, 0x07, 0x62, 0xec, 0xd4, 0xaf, 0x0d, 0xe5, 0xef, 0xbf,
	0xc1, 0x60, 0x99, 0x65, 0xc8, 0xc7, 0xdd, 0x3b, 0x7e, 0x1e, 0x49, 0x52, 0xfe, 0x0c, 0x28, 0xef,
	0xa5, 0x07, 0x59, 0xaa, 0x13, 0x58, 0xa4, 0x1e, 0x1c, 0x4f, 0x3e, 0x8d, 0xc4, 0xec, 0x7f, 0x79,
	0x2b, 0x09, 0x32, 0xc9, 0xdf, 0x61, 0x75, 0x62, 0xdb, 0x71, 0x29, 0x4e, 0x89, 0xff, 0x1c, 0x95,
	0x77, 0x53, 0x22, 0x2c, 0xc3, 0x5f, 0x21, 0x1b, 0x1a, 0x67, 0xbc, 0x1d, 0x91, 0x12, 0xde, 0xbd,
	0x5c, 0x9c, 0x86, 0x99, 0xb0, 0x01, 0xb9, 0x98, 0xe3, 0xc6, 0xe5, 0x24, 0x2d, 0x71, 0xfc, 0xf3,
	0xd4, 0x18, 0x2f, 0x20, 0xf4, 0xbd, 0xbc, 0x80, 0x84, 0xf5, 0xe6, 0x05, 0x24, 0x4d, 0x36, 0x2d,
	0x20, 0x66, 0x98, 0x79, 0x01, 0xb3, 0xce, 0x9b, 0x17, 0x90, 0xe6, 0xb0, 0x65, 0xc8, 0xc7, 0x4d,
	0x2a, 0x7f, 0x83, 0x29, 0xfe, 0x99, 0xbf, 0xc1, 0x34, 0xa7, 0x4c, 0xd7, 0x6c, 0xc6, 0xef, 0xf2,
	0x35, 0x7b, 0xc8, 0x44, 0xf3, 0x35, 0x7b, 0xd8, 0x2c, 0x7f, 0x80, 0x65, 0x66, 0x3f, 0xf9, 0xf2,
	0x27, 0x5d, 0x30, 0x5f, 0xfe, 0x29, 0xbf, 0x4b, 0x1b, 0x8c, 0x5b, 0x57, 0xde, 0x60, 0x8a, 0x0b,
	0xe6, 0x0d, 0xa6, 0xba, 0xdd, 0x60, 0xe6, 0x13, 0xff, 0x16, 0x9f, 0xf9, 0xb4, 0x95, 0x8d, 0xcf,
	0x7c, 0xc6, 0x7a, 0xe2, 0x0e, 0xa0, 0x69, 0x1f, 0x88, 0x5f, 0xa6, 0x08, 0x12, 0xa5, 0xed, 0x3f,
	0x4c, 0x60, 0x69, 0x75, 0x58, 0x9f, 0x32, 0x4d, 0xf8, 0xc5, 0x64, 0xf7, 0x52, 0x3d, 0x62, 0xf9,
	0xe5, 0x83, 0x71, 0x96, 0xd3, 0x82, 0xad, 0x34, 0x23, 0x86, 0xff, 0xfc, 0x80, 0x30, 0x51, 0xf2,
	0x0f, 0xdf, 0x26, 0xb1, 0x23, 0xea, 0x00, 0xdc, 0x62, 0xe1, 0xdd, 0xd8, 0xa5, 0x93, 0xb4, 0x49,
	0xe5, 0x72, 0x5a, 0x88, 0x27, 0x31, 0x52, 0x92, 0x18, 0x0f, 0x27, 0x99, 0xf5, 0x46, 0xb5, 0x9f,
	0x61, 0xb7, 0xeb, 0x0c, 0x8e, 0xbc, 0xf1, 0xc8, 0x25, 0x03, 0xcb, 0x1e, 0x76, 0x8f, 0xbc, 0xde,
	0x2d, 0xe3, 0xb7, 0x32, 0x5f, 0x8a, 0x97, 0xb6, 0xe3, 0xf9, 0x96, 0xfb, 0xda, 0x23, 0x2e, 0x85,
	0x5e, 0x87, 0x91, 0xcb, 0x6c, 0xf0, 0x11, 0xfc, 0xcd, 0x1f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd2,
	0x56, 0x0c, 0x50, 0x27, 0x17, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DeviceClient is the client API for Device service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DeviceClient interface {
	GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error)
	GetCapabilityInfo(ctx context.Context, in *GetCapabilityInfoRequest, opts ...grpc.CallOption) (*GetCapabilityInfoResponse, error)
	DeleteRootCA(ctx context.Context, in *DeleteRootCARequest, opts ...grpc.CallOption) (*DeleteRootCAResponse, error)
	Lock(ctx context.Context, in *LockRequest, opts ...grpc.CallOption) (*LockResponse, error)
	LockMulti(ctx context.Context, in *LockMultiRequest, opts ...grpc.CallOption) (*LockMultiResponse, error)
	Unlock(ctx context.Context, in *UnlockRequest, opts ...grpc.CallOption) (*UnlockResponse, error)
	UnlockMulti(ctx context.Context, in *UnlockMultiRequest, opts ...grpc.CallOption) (*UnlockMultiResponse, error)
	Reboot(ctx context.Context, in *RebootRequest, opts ...grpc.CallOption) (*RebootResponse, error)
	RebootMulti(ctx context.Context, in *RebootMultiRequest, opts ...grpc.CallOption) (*RebootMultiResponse, error)
	FactoryReset(ctx context.Context, in *FactoryResetRequest, opts ...grpc.CallOption) (*FactoryResetResponse, error)
	FactoryResetMulti(ctx context.Context, in *FactoryResetMultiRequest, opts ...grpc.CallOption) (*FactoryResetMultiResponse, error)
	ClearDB(ctx context.Context, in *ClearDBRequest, opts ...grpc.CallOption) (*ClearDBResponse, error)
	ClearDBMulti(ctx context.Context, in *ClearDBMultiRequest, opts ...grpc.CallOption) (*ClearDBMultiResponse, error)
	ResetConfig(ctx context.Context, in *ResetConfigRequest, opts ...grpc.CallOption) (*ResetConfigResponse, error)
	ResetConfigMulti(ctx context.Context, in *ResetConfigMultiRequest, opts ...grpc.CallOption) (*ResetConfigMultiResponse, error)
	UpgradeFirmware(ctx context.Context, in *UpgradeFirmwareRequest, opts ...grpc.CallOption) (*UpgradeFirmwareResponse, error)
	UpgradeFirmwareMulti(ctx context.Context, in *UpgradeFirmwareMultiRequest, opts ...grpc.CallOption) (*UpgradeFirmwareMultiResponse, error)
	GetHashKey(ctx context.Context, in *GetHashKeyRequest, opts ...grpc.CallOption) (*GetHashKeyResponse, error)
	SetHashKey(ctx context.Context, in *SetHashKeyRequest, opts ...grpc.CallOption) (*SetHashKeyResponse, error)
}

type deviceClient struct {
	cc *grpc.ClientConn
}

func NewDeviceClient(cc *grpc.ClientConn) DeviceClient {
	return &deviceClient{cc}
}

func (c *deviceClient) GetInfo(ctx context.Context, in *GetInfoRequest, opts ...grpc.CallOption) (*GetInfoResponse, error) {
	out := new(GetInfoResponse)
	err := c.cc.Invoke(ctx, "/device.Device/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) GetCapabilityInfo(ctx context.Context, in *GetCapabilityInfoRequest, opts ...grpc.CallOption) (*GetCapabilityInfoResponse, error) {
	out := new(GetCapabilityInfoResponse)
	err := c.cc.Invoke(ctx, "/device.Device/GetCapabilityInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) DeleteRootCA(ctx context.Context, in *DeleteRootCARequest, opts ...grpc.CallOption) (*DeleteRootCAResponse, error) {
	out := new(DeleteRootCAResponse)
	err := c.cc.Invoke(ctx, "/device.Device/DeleteRootCA", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) Lock(ctx context.Context, in *LockRequest, opts ...grpc.CallOption) (*LockResponse, error) {
	out := new(LockResponse)
	err := c.cc.Invoke(ctx, "/device.Device/Lock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) LockMulti(ctx context.Context, in *LockMultiRequest, opts ...grpc.CallOption) (*LockMultiResponse, error) {
	out := new(LockMultiResponse)
	err := c.cc.Invoke(ctx, "/device.Device/LockMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) Unlock(ctx context.Context, in *UnlockRequest, opts ...grpc.CallOption) (*UnlockResponse, error) {
	out := new(UnlockResponse)
	err := c.cc.Invoke(ctx, "/device.Device/Unlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) UnlockMulti(ctx context.Context, in *UnlockMultiRequest, opts ...grpc.CallOption) (*UnlockMultiResponse, error) {
	out := new(UnlockMultiResponse)
	err := c.cc.Invoke(ctx, "/device.Device/UnlockMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) Reboot(ctx context.Context, in *RebootRequest, opts ...grpc.CallOption) (*RebootResponse, error) {
	out := new(RebootResponse)
	err := c.cc.Invoke(ctx, "/device.Device/Reboot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) RebootMulti(ctx context.Context, in *RebootMultiRequest, opts ...grpc.CallOption) (*RebootMultiResponse, error) {
	out := new(RebootMultiResponse)
	err := c.cc.Invoke(ctx, "/device.Device/RebootMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) FactoryReset(ctx context.Context, in *FactoryResetRequest, opts ...grpc.CallOption) (*FactoryResetResponse, error) {
	out := new(FactoryResetResponse)
	err := c.cc.Invoke(ctx, "/device.Device/FactoryReset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) FactoryResetMulti(ctx context.Context, in *FactoryResetMultiRequest, opts ...grpc.CallOption) (*FactoryResetMultiResponse, error) {
	out := new(FactoryResetMultiResponse)
	err := c.cc.Invoke(ctx, "/device.Device/FactoryResetMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) ClearDB(ctx context.Context, in *ClearDBRequest, opts ...grpc.CallOption) (*ClearDBResponse, error) {
	out := new(ClearDBResponse)
	err := c.cc.Invoke(ctx, "/device.Device/ClearDB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) ClearDBMulti(ctx context.Context, in *ClearDBMultiRequest, opts ...grpc.CallOption) (*ClearDBMultiResponse, error) {
	out := new(ClearDBMultiResponse)
	err := c.cc.Invoke(ctx, "/device.Device/ClearDBMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) ResetConfig(ctx context.Context, in *ResetConfigRequest, opts ...grpc.CallOption) (*ResetConfigResponse, error) {
	out := new(ResetConfigResponse)
	err := c.cc.Invoke(ctx, "/device.Device/ResetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) ResetConfigMulti(ctx context.Context, in *ResetConfigMultiRequest, opts ...grpc.CallOption) (*ResetConfigMultiResponse, error) {
	out := new(ResetConfigMultiResponse)
	err := c.cc.Invoke(ctx, "/device.Device/ResetConfigMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) UpgradeFirmware(ctx context.Context, in *UpgradeFirmwareRequest, opts ...grpc.CallOption) (*UpgradeFirmwareResponse, error) {
	out := new(UpgradeFirmwareResponse)
	err := c.cc.Invoke(ctx, "/device.Device/UpgradeFirmware", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) UpgradeFirmwareMulti(ctx context.Context, in *UpgradeFirmwareMultiRequest, opts ...grpc.CallOption) (*UpgradeFirmwareMultiResponse, error) {
	out := new(UpgradeFirmwareMultiResponse)
	err := c.cc.Invoke(ctx, "/device.Device/UpgradeFirmwareMulti", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) GetHashKey(ctx context.Context, in *GetHashKeyRequest, opts ...grpc.CallOption) (*GetHashKeyResponse, error) {
	out := new(GetHashKeyResponse)
	err := c.cc.Invoke(ctx, "/device.Device/GetHashKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *deviceClient) SetHashKey(ctx context.Context, in *SetHashKeyRequest, opts ...grpc.CallOption) (*SetHashKeyResponse, error) {
	out := new(SetHashKeyResponse)
	err := c.cc.Invoke(ctx, "/device.Device/SetHashKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DeviceServer is the server API for Device service.
type DeviceServer interface {
	GetInfo(context.Context, *GetInfoRequest) (*GetInfoResponse, error)
	GetCapabilityInfo(context.Context, *GetCapabilityInfoRequest) (*GetCapabilityInfoResponse, error)
	DeleteRootCA(context.Context, *DeleteRootCARequest) (*DeleteRootCAResponse, error)
	Lock(context.Context, *LockRequest) (*LockResponse, error)
	LockMulti(context.Context, *LockMultiRequest) (*LockMultiResponse, error)
	Unlock(context.Context, *UnlockRequest) (*UnlockResponse, error)
	UnlockMulti(context.Context, *UnlockMultiRequest) (*UnlockMultiResponse, error)
	Reboot(context.Context, *RebootRequest) (*RebootResponse, error)
	RebootMulti(context.Context, *RebootMultiRequest) (*RebootMultiResponse, error)
	FactoryReset(context.Context, *FactoryResetRequest) (*FactoryResetResponse, error)
	FactoryResetMulti(context.Context, *FactoryResetMultiRequest) (*FactoryResetMultiResponse, error)
	ClearDB(context.Context, *ClearDBRequest) (*ClearDBResponse, error)
	ClearDBMulti(context.Context, *ClearDBMultiRequest) (*ClearDBMultiResponse, error)
	ResetConfig(context.Context, *ResetConfigRequest) (*ResetConfigResponse, error)
	ResetConfigMulti(context.Context, *ResetConfigMultiRequest) (*ResetConfigMultiResponse, error)
	UpgradeFirmware(context.Context, *UpgradeFirmwareRequest) (*UpgradeFirmwareResponse, error)
	UpgradeFirmwareMulti(context.Context, *UpgradeFirmwareMultiRequest) (*UpgradeFirmwareMultiResponse, error)
	GetHashKey(context.Context, *GetHashKeyRequest) (*GetHashKeyResponse, error)
	SetHashKey(context.Context, *SetHashKeyRequest) (*SetHashKeyResponse, error)
}

func RegisterDeviceServer(s *grpc.Server, srv DeviceServer) {
	s.RegisterService(&_Device_serviceDesc, srv)
}

func _Device_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).GetInfo(ctx, req.(*GetInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_GetCapabilityInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCapabilityInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).GetCapabilityInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/GetCapabilityInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).GetCapabilityInfo(ctx, req.(*GetCapabilityInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_DeleteRootCA_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRootCARequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).DeleteRootCA(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/DeleteRootCA",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).DeleteRootCA(ctx, req.(*DeleteRootCARequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_Lock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).Lock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/Lock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).Lock(ctx, req.(*LockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_LockMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).LockMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/LockMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).LockMulti(ctx, req.(*LockMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_Unlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).Unlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/Unlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).Unlock(ctx, req.(*UnlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_UnlockMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlockMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).UnlockMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/UnlockMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).UnlockMulti(ctx, req.(*UnlockMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_Reboot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RebootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).Reboot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/Reboot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).Reboot(ctx, req.(*RebootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_RebootMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RebootMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).RebootMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/RebootMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).RebootMulti(ctx, req.(*RebootMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_FactoryReset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FactoryResetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).FactoryReset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/FactoryReset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).FactoryReset(ctx, req.(*FactoryResetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_FactoryResetMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FactoryResetMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).FactoryResetMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/FactoryResetMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).FactoryResetMulti(ctx, req.(*FactoryResetMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_ClearDB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearDBRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).ClearDB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/ClearDB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).ClearDB(ctx, req.(*ClearDBRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_ClearDBMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearDBMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).ClearDBMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/ClearDBMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).ClearDBMulti(ctx, req.(*ClearDBMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_ResetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).ResetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/ResetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).ResetConfig(ctx, req.(*ResetConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_ResetConfigMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetConfigMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).ResetConfigMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/ResetConfigMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).ResetConfigMulti(ctx, req.(*ResetConfigMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_UpgradeFirmware_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpgradeFirmwareRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).UpgradeFirmware(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/UpgradeFirmware",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).UpgradeFirmware(ctx, req.(*UpgradeFirmwareRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_UpgradeFirmwareMulti_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpgradeFirmwareMultiRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).UpgradeFirmwareMulti(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/UpgradeFirmwareMulti",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).UpgradeFirmwareMulti(ctx, req.(*UpgradeFirmwareMultiRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_GetHashKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHashKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).GetHashKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/GetHashKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).GetHashKey(ctx, req.(*GetHashKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Device_SetHashKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetHashKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DeviceServer).SetHashKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.Device/SetHashKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DeviceServer).SetHashKey(ctx, req.(*SetHashKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Device_serviceDesc = grpc.ServiceDesc{
	ServiceName: "device.Device",
	HandlerType: (*DeviceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInfo",
			Handler:    _Device_GetInfo_Handler,
		},
		{
			MethodName: "GetCapabilityInfo",
			Handler:    _Device_GetCapabilityInfo_Handler,
		},
		{
			MethodName: "DeleteRootCA",
			Handler:    _Device_DeleteRootCA_Handler,
		},
		{
			MethodName: "Lock",
			Handler:    _Device_Lock_Handler,
		},
		{
			MethodName: "LockMulti",
			Handler:    _Device_LockMulti_Handler,
		},
		{
			MethodName: "Unlock",
			Handler:    _Device_Unlock_Handler,
		},
		{
			MethodName: "UnlockMulti",
			Handler:    _Device_UnlockMulti_Handler,
		},
		{
			MethodName: "Reboot",
			Handler:    _Device_Reboot_Handler,
		},
		{
			MethodName: "RebootMulti",
			Handler:    _Device_RebootMulti_Handler,
		},
		{
			MethodName: "FactoryReset",
			Handler:    _Device_FactoryReset_Handler,
		},
		{
			MethodName: "FactoryResetMulti",
			Handler:    _Device_FactoryResetMulti_Handler,
		},
		{
			MethodName: "ClearDB",
			Handler:    _Device_ClearDB_Handler,
		},
		{
			MethodName: "ClearDBMulti",
			Handler:    _Device_ClearDBMulti_Handler,
		},
		{
			MethodName: "ResetConfig",
			Handler:    _Device_ResetConfig_Handler,
		},
		{
			MethodName: "ResetConfigMulti",
			Handler:    _Device_ResetConfigMulti_Handler,
		},
		{
			MethodName: "UpgradeFirmware",
			Handler:    _Device_UpgradeFirmware_Handler,
		},
		{
			MethodName: "UpgradeFirmwareMulti",
			Handler:    _Device_UpgradeFirmwareMulti_Handler,
		},
		{
			MethodName: "GetHashKey",
			Handler:    _Device_GetHashKey_Handler,
		},
		{
			MethodName: "SetHashKey",
			Handler:    _Device_SetHashKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "device.proto",
}
